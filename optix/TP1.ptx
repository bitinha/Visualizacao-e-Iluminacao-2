//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-25769353
// Cuda compilation tools, release 10.1, V10.1.105
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_30
.address_size 64

	// .globl	__closesthit__radiance
.const .align 8 .b8 optixLaunchParams[88];

.visible .entry __closesthit__radiance(

)
{
	.local .align 4 .b8 	__local_depot0[12];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<4>;
	.reg .f32 	%f<240>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<44>;


	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd8, %SP, 0;
	add.u64 	%rd9, %SPL, 0;
	mov.u64 	%rd10, 1065353216;
	st.local.u32 	[%rd9+4], %rd10;
	st.local.u32 	[%rd9], %rd10;
	mov.u32 	%r4, 1065353216;
	st.local.u32 	[%rd9+8], %r4;
	ld.const.u64 	%rd11, [optixLaunchParams+80];
	cvta.to.global.u64 	%rd12, %rd11;
	ld.global.v4.f32 	{%f29, %f30, %f31, %f32}, [%rd12];
	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd13, %r1;
	shl.b64 	%rd14, %rd13, 32;
	cvt.u64.u32	%rd15, %r2;
	or.b64  	%rd1, %rd14, %rd15;
	// inline asm
	call (%rd7), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	// inline asm
	call (%r3), _optix_read_primitive_idx, ();
	// inline asm
	ld.u64 	%rd16, [%rd7];
	mul.wide.s32 	%rd17, %r3, 12;
	add.s64 	%rd18, %rd16, %rd17;
	ld.u32 	%rd3, [%rd18];
	ld.u32 	%rd4, [%rd18+4];
	ld.u32 	%rd5, [%rd18+8];
	// inline asm
	call (%f27, %f28), _optix_get_triangle_barycentrics, ();
	// inline asm
	ld.u32 	%r5, [%rd7+48];
	setp.eq.s32	%p1, %r5, 0;
	@%p1 bra 	BB0_3;

	ld.u64 	%rd6, [%rd7+24];
	setp.eq.s64	%p2, %rd6, 0;
	@%p2 bra 	BB0_3;

	mov.f32 	%f33, 0f3F800000;
	sub.ftz.f32 	%f34, %f33, %f27;
	sub.ftz.f32 	%f233, %f34, %f28;
	shl.b64 	%rd19, %rd3, 4;
	add.s64 	%rd20, %rd6, %rd19;
	ld.v2.f32 	{%f35, %f36}, [%rd20];
	shl.b64 	%rd21, %rd4, 4;
	add.s64 	%rd22, %rd6, %rd21;
	ld.v2.f32 	{%f39, %f40}, [%rd22];
	mul.ftz.f32 	%f43, %f27, %f39;
	mul.ftz.f32 	%f44, %f27, %f40;
	fma.rn.ftz.f32 	%f45, %f233, %f35, %f43;
	fma.rn.ftz.f32 	%f46, %f233, %f36, %f44;
	shl.b64 	%rd23, %rd5, 4;
	add.s64 	%rd24, %rd6, %rd23;
	ld.v2.f32 	{%f47, %f48}, [%rd24];
	fma.rn.ftz.f32 	%f51, %f28, %f47, %f45;
	fma.rn.ftz.f32 	%f52, %f28, %f48, %f46;
	ld.u64 	%rd25, [%rd7+56];
	tex.2d.v4.f32.f32	{%f53, %f54, %f55, %f56}, [%rd25, {%f51, %f52}];
	st.f32 	[%rd1], %f53;
	st.f32 	[%rd1+4], %f54;
	st.f32 	[%rd1+8], %f55;
	bra.uni 	BB0_4;

BB0_3:
	ld.v2.f32 	{%f57, %f58}, [%rd7+64];
	ld.f32 	%f61, [%rd7+72];
	st.f32 	[%rd1], %f57;
	st.f32 	[%rd1+4], %f58;
	st.f32 	[%rd1+8], %f61;
	mov.f32 	%f62, 0f3F800000;
	sub.ftz.f32 	%f63, %f62, %f27;
	sub.ftz.f32 	%f233, %f63, %f28;

BB0_4:
	cvt.u32.u64	%r15, %rd3;
	cvt.u32.u64	%r16, %rd4;
	cvt.u32.u64	%r17, %rd5;
	ld.u64 	%rd27, [%rd7+16];
	mul.wide.u32 	%rd28, %r15, 16;
	add.s64 	%rd29, %rd27, %rd28;
	ld.v4.f32 	{%f73, %f74, %f75, %f76}, [%rd29];
	mov.u32 	%r12, 1;
	mov.u32 	%r11, 2;
	mul.wide.u32 	%rd30, %r16, 16;
	add.s64 	%rd31, %rd27, %rd30;
	ld.v4.f32 	{%f81, %f82, %f83, %f84}, [%rd31];
	mul.ftz.f32 	%f89, %f27, %f81;
	mul.ftz.f32 	%f90, %f27, %f82;
	mul.ftz.f32 	%f91, %f27, %f83;
	mul.ftz.f32 	%f92, %f27, %f84;
	fma.rn.ftz.f32 	%f93, %f233, %f73, %f89;
	fma.rn.ftz.f32 	%f94, %f233, %f74, %f90;
	fma.rn.ftz.f32 	%f95, %f233, %f75, %f91;
	fma.rn.ftz.f32 	%f96, %f233, %f76, %f92;
	mul.wide.u32 	%rd32, %r17, 16;
	add.s64 	%rd33, %rd27, %rd32;
	ld.v4.f32 	{%f97, %f98, %f99, %f100}, [%rd33];
	fma.rn.ftz.f32 	%f105, %f28, %f97, %f93;
	fma.rn.ftz.f32 	%f106, %f28, %f98, %f94;
	fma.rn.ftz.f32 	%f107, %f28, %f99, %f95;
	fma.rn.ftz.f32 	%f108, %f28, %f100, %f96;
	mul.ftz.f32 	%f109, %f30, %f30;
	fma.rn.ftz.f32 	%f110, %f29, %f29, %f109;
	fma.rn.ftz.f32 	%f111, %f31, %f31, %f110;
	fma.rn.ftz.f32 	%f112, %f32, %f32, %f111;
	rsqrt.approx.ftz.f32 	%f113, %f112;
	mul.ftz.f32 	%f114, %f29, %f113;
	mul.ftz.f32 	%f115, %f30, %f113;
	mul.ftz.f32 	%f116, %f31, %f113;
	mul.ftz.f32 	%f117, %f32, %f113;
	mul.ftz.f32 	%f118, %f106, %f106;
	fma.rn.ftz.f32 	%f119, %f105, %f105, %f118;
	fma.rn.ftz.f32 	%f120, %f107, %f107, %f119;
	fma.rn.ftz.f32 	%f121, %f108, %f108, %f120;
	rsqrt.approx.ftz.f32 	%f122, %f121;
	mul.ftz.f32 	%f123, %f105, %f122;
	mul.ftz.f32 	%f124, %f106, %f122;
	mul.ftz.f32 	%f125, %f107, %f122;
	mul.ftz.f32 	%f126, %f108, %f122;
	mul.ftz.f32 	%f127, %f114, %f123;
	mul.ftz.f32 	%f128, %f115, %f124;
	neg.ftz.f32 	%f129, %f128;
	sub.ftz.f32 	%f130, %f129, %f127;
	mul.ftz.f32 	%f131, %f116, %f125;
	sub.ftz.f32 	%f132, %f130, %f131;
	mul.ftz.f32 	%f133, %f117, %f126;
	sub.ftz.f32 	%f134, %f132, %f133;
	mov.f32 	%f237, 0f00000000;
	max.ftz.f32 	%f10, %f134, %f237;
	ld.u64 	%rd34, [%rd7+8];
	add.s64 	%rd35, %rd34, %rd28;
	ld.v4.f32 	{%f135, %f136, %f137, %f138}, [%rd35];
	add.s64 	%rd36, %rd34, %rd30;
	ld.v4.f32 	{%f142, %f143, %f144, %f145}, [%rd36];
	mul.ftz.f32 	%f149, %f27, %f142;
	mul.ftz.f32 	%f150, %f27, %f143;
	mul.ftz.f32 	%f151, %f27, %f144;
	fma.rn.ftz.f32 	%f152, %f233, %f135, %f149;
	fma.rn.ftz.f32 	%f153, %f233, %f136, %f150;
	fma.rn.ftz.f32 	%f154, %f233, %f137, %f151;
	add.s64 	%rd37, %rd34, %rd32;
	ld.v4.f32 	{%f155, %f156, %f157, %f158}, [%rd37];
	fma.rn.ftz.f32 	%f64, %f28, %f155, %f152;
	fma.rn.ftz.f32 	%f65, %f28, %f156, %f153;
	fma.rn.ftz.f32 	%f66, %f28, %f157, %f154;
	ld.const.u64 	%rd26, [optixLaunchParams+72];
	neg.ftz.f32 	%f67, %f29;
	neg.ftz.f32 	%f68, %f30;
	neg.ftz.f32 	%f69, %f31;
	shr.u64 	%rd39, %rd8, 32;
	cvt.u32.u64	%r13, %rd39;
	cvt.u32.u64	%r14, %rd8;
	mov.u32 	%r8, 255;
	mov.f32 	%f70, 0f3A83126F;
	mov.f32 	%f71, 0f60AD78EC;
	// inline asm
	call (%r6, %r7), _optix_trace_2, (%rd26, %f64, %f65, %f66, %f67, %f68, %f69, %f70, %f71, %f237, %r8, %r12, %r12, %r11, %r12, %r13, %r14);
	// inline asm
	ld.const.v2.f32 	{%f162, %f163}, [optixLaunchParams+24];
	sub.ftz.f32 	%f166, %f64, %f162;
	sub.ftz.f32 	%f167, %f65, %f163;
	ld.const.f32 	%f168, [optixLaunchParams+32];
	sub.ftz.f32 	%f169, %f66, %f168;
	mul.ftz.f32 	%f170, %f167, %f167;
	fma.rn.ftz.f32 	%f171, %f166, %f166, %f170;
	fma.rn.ftz.f32 	%f172, %f169, %f169, %f171;
	rsqrt.approx.ftz.f32 	%f173, %f172;
	mul.ftz.f32 	%f174, %f166, %f173;
	mul.ftz.f32 	%f175, %f167, %f173;
	mul.ftz.f32 	%f176, %f169, %f173;
	neg.ftz.f32 	%f177, %f32;
	add.ftz.f32 	%f178, %f105, %f105;
	add.ftz.f32 	%f179, %f106, %f106;
	add.ftz.f32 	%f180, %f107, %f107;
	add.ftz.f32 	%f181, %f108, %f108;
	mul.ftz.f32 	%f182, %f105, %f67;
	mul.ftz.f32 	%f183, %f106, %f30;
	sub.ftz.f32 	%f184, %f182, %f183;
	mul.ftz.f32 	%f185, %f107, %f31;
	sub.ftz.f32 	%f186, %f184, %f185;
	mul.ftz.f32 	%f187, %f108, %f32;
	sub.ftz.f32 	%f188, %f186, %f187;
	mul.ftz.f32 	%f189, %f178, %f188;
	mul.ftz.f32 	%f190, %f179, %f188;
	mul.ftz.f32 	%f191, %f180, %f188;
	mul.ftz.f32 	%f192, %f181, %f188;
	sub.ftz.f32 	%f193, %f67, %f189;
	sub.ftz.f32 	%f194, %f68, %f190;
	sub.ftz.f32 	%f195, %f69, %f191;
	sub.ftz.f32 	%f196, %f177, %f192;
	mul.ftz.f32 	%f197, %f194, %f194;
	fma.rn.ftz.f32 	%f198, %f193, %f193, %f197;
	fma.rn.ftz.f32 	%f199, %f195, %f195, %f198;
	fma.rn.ftz.f32 	%f200, %f196, %f196, %f199;
	rsqrt.approx.ftz.f32 	%f201, %f200;
	mul.ftz.f32 	%f202, %f193, %f201;
	mul.ftz.f32 	%f203, %f194, %f201;
	mul.ftz.f32 	%f204, %f195, %f201;
	mul.ftz.f32 	%f205, %f175, %f203;
	fma.rn.ftz.f32 	%f206, %f174, %f202, %f205;
	fma.rn.ftz.f32 	%f11, %f176, %f204, %f206;
	setp.gt.ftz.f32	%p3, %f11, 0f00000000;
	@%p3 bra 	BB0_6;
	bra.uni 	BB0_5;

BB0_6:
	lg2.approx.ftz.f32 	%f210, %f11;
	ex2.approx.ftz.f32 	%f211, %f210;
	ld.local.f32 	%f236, [%rd9];
	mul.ftz.f32 	%f212, %f211, %f236;
	ld.local.f32 	%f235, [%rd9+4];
	mul.ftz.f32 	%f213, %f211, %f235;
	ld.local.f32 	%f234, [%rd9+8];
	mul.ftz.f32 	%f214, %f211, %f234;
	mul.ftz.f32 	%f237, %f212, 0f3E4CCCCD;
	mul.ftz.f32 	%f238, %f213, 0f3E4CCCCD;
	mul.ftz.f32 	%f239, %f214, 0f3E4CCCCD;
	bra.uni 	BB0_7;

BB0_5:
	ld.local.f32 	%f236, [%rd9];
	ld.local.f32 	%f235, [%rd9+4];
	ld.local.f32 	%f234, [%rd9+8];
	mov.f32 	%f238, %f237;
	mov.f32 	%f239, %f237;

BB0_7:
	ld.f32 	%f215, [%rd1];
	ld.f32 	%f216, [%rd1+4];
	ld.f32 	%f217, [%rd1+8];
	mul.ftz.f32 	%f218, %f215, %f236;
	mul.ftz.f32 	%f219, %f216, %f235;
	mul.ftz.f32 	%f220, %f217, %f234;
	mul.ftz.f32 	%f221, %f218, 0f3F19999A;
	mul.ftz.f32 	%f222, %f219, 0f3F19999A;
	mul.ftz.f32 	%f223, %f220, 0f3F19999A;
	mul.ftz.f32 	%f224, %f10, %f221;
	mul.ftz.f32 	%f225, %f10, %f222;
	mul.ftz.f32 	%f226, %f10, %f223;
	fma.rn.ftz.f32 	%f227, %f215, 0f3E4CCCCD, %f224;
	fma.rn.ftz.f32 	%f228, %f216, 0f3E4CCCCD, %f225;
	fma.rn.ftz.f32 	%f229, %f217, 0f3E4CCCCD, %f226;
	add.ftz.f32 	%f230, %f237, %f227;
	add.ftz.f32 	%f231, %f238, %f228;
	add.ftz.f32 	%f232, %f239, %f229;
	st.f32 	[%rd1], %f230;
	st.f32 	[%rd1+4], %f231;
	st.f32 	[%rd1+8], %f232;
	ret;
}

	// .globl	__anyhit__radiance
.visible .entry __anyhit__radiance(

)
{



	ret;
}

	// .globl	__miss__radiance
.visible .entry __miss__radiance(

)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<7>;


	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd1, %r1;
	shl.b64 	%rd2, %rd1, 32;
	cvt.u64.u32	%rd3, %r2;
	or.b64  	%rd4, %rd2, %rd3;
	mov.u64 	%rd5, 1060320051;
	st.u32 	[%rd4+4], %rd5;
	mov.u64 	%rd6, 0;
	st.u32 	[%rd4], %rd6;
	mov.u32 	%r3, 1065353216;
	st.u32 	[%rd4+8], %r3;
	ret;
}

	// .globl	__raygen__renderFrame
.visible .entry __raygen__renderFrame(

)
{
	.local .align 4 .b8 	__local_depot3[12];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .f32 	%f<57>;
	.reg .b32 	%r<26>;
	.reg .b64 	%rd<10>;


	mov.u64 	%SPL, __local_depot3;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd2, %SP, 0;
	add.u64 	%rd3, %SPL, 0;
	// inline asm
	call (%r1), _optix_get_launch_index_x, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_launch_index_y, ();
	// inline asm
	mov.u64 	%rd4, 1065353216;
	st.local.u32 	[%rd3+4], %rd4;
	st.local.u32 	[%rd3], %rd4;
	mov.u32 	%r16, 1065353216;
	st.local.u32 	[%rd3+8], %r16;
	shr.u64 	%rd5, %rd2, 32;
	cvt.u32.u64	%r14, %rd5;
	cvt.u32.u64	%r15, %rd2;
	cvt.rn.f32.s32	%f10, %r1;
	add.ftz.f32 	%f11, %f10, 0f3F000000;
	cvt.rn.f32.s32	%f12, %r2;
	add.ftz.f32 	%f13, %f12, 0f3F000000;
	// inline asm
	call (%r4), _optix_get_launch_dimension_x, ();
	// inline asm
	// inline asm
	call (%r5), _optix_get_launch_dimension_y, ();
	// inline asm
	cvt.rn.f32.u32	%f14, %r4;
	cvt.rn.f32.u32	%f15, %r5;
	div.approx.ftz.f32 	%f16, %f11, %f14;
	div.approx.ftz.f32 	%f17, %f13, %f15;
	fma.rn.ftz.f32 	%f18, %f16, 0f40000000, 0fBF800000;
	fma.rn.ftz.f32 	%f19, %f17, 0f40000000, 0fBF800000;
	ld.const.v2.f32 	{%f20, %f21}, [optixLaunchParams+48];
	mov.u32 	%r13, 0;
	mov.u32 	%r10, 1;
	ld.const.v2.f32 	{%f24, %f25}, [optixLaunchParams+56];
	ld.const.v2.f32 	{%f28, %f29}, [optixLaunchParams+32];
	fma.rn.ftz.f32 	%f31, %f20, %f18, %f29;
	ld.const.v2.f32 	{%f32, %f33}, [optixLaunchParams+40];
	fma.rn.ftz.f32 	%f36, %f18, %f21, %f32;
	fma.rn.ftz.f32 	%f37, %f18, %f24, %f33;
	ld.const.v2.f32 	{%f38, %f39}, [optixLaunchParams+64];
	fma.rn.ftz.f32 	%f42, %f19, %f25, %f31;
	fma.rn.ftz.f32 	%f43, %f19, %f38, %f36;
	fma.rn.ftz.f32 	%f44, %f19, %f39, %f37;
	mul.ftz.f32 	%f45, %f43, %f43;
	fma.rn.ftz.f32 	%f46, %f42, %f42, %f45;
	fma.rn.ftz.f32 	%f47, %f44, %f44, %f46;
	rsqrt.approx.ftz.f32 	%f48, %f47;
	mul.ftz.f32 	%f4, %f42, %f48;
	mul.ftz.f32 	%f5, %f43, %f48;
	mul.ftz.f32 	%f6, %f44, %f48;
	ld.const.u64 	%rd1, [optixLaunchParams+72];
	ld.const.v2.f32 	{%f49, %f50}, [optixLaunchParams+24];
	mov.u32 	%r9, 255;
	mov.u32 	%r12, 2;
	mov.f32 	%f8, 0f60AD78EC;
	mov.f32 	%f9, 0f00000000;
	// inline asm
	call (%r7, %r8), _optix_trace_2, (%rd1, %f49, %f50, %f28, %f4, %f5, %f6, %f9, %f8, %f9, %r9, %r10, %r13, %r12, %r13, %r14, %r15);
	// inline asm
	ld.local.f32 	%f51, [%rd3];
	mul.ftz.f32 	%f52, %f51, 0f437F0000;
	cvt.rzi.ftz.s32.f32	%r17, %f52;
	ld.local.f32 	%f53, [%rd3+4];
	mul.ftz.f32 	%f54, %f53, 0f437F0000;
	cvt.rzi.ftz.s32.f32	%r18, %f54;
	ld.local.f32 	%f55, [%rd3+8];
	mul.ftz.f32 	%f56, %f55, 0f437F0000;
	cvt.rzi.ftz.s32.f32	%r19, %f56;
	shl.b32 	%r20, %r18, 8;
	shl.b32 	%r21, %r19, 16;
	or.b32  	%r22, %r17, %r20;
	or.b32  	%r23, %r22, %r21;
	or.b32  	%r24, %r23, -16777216;
	mad.lo.s32 	%r25, %r4, %r2, %r1;
	ld.const.u64 	%rd6, [optixLaunchParams+8];
	cvta.to.global.u64 	%rd7, %rd6;
	mul.wide.u32 	%rd8, %r25, 4;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.u32 	[%rd9], %r24;
	ret;
}

	// .globl	__anyhit__shadow
.visible .entry __anyhit__shadow(

)
{



	ret;
}

	// .globl	__closesthit__shadow
.visible .entry __closesthit__shadow(

)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<6>;


	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd1, %r1;
	shl.b64 	%rd2, %rd1, 32;
	cvt.u64.u32	%rd3, %r2;
	or.b64  	%rd4, %rd2, %rd3;
	mov.u64 	%rd5, 0;
	st.u32 	[%rd4+4], %rd5;
	st.u32 	[%rd4], %rd5;
	mov.u32 	%r3, 0;
	st.u32 	[%rd4+8], %r3;
	ret;
}

	// .globl	__miss__shadow
.visible .entry __miss__shadow(

)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<6>;


	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd1, %r1;
	shl.b64 	%rd2, %rd1, 32;
	cvt.u64.u32	%rd3, %r2;
	or.b64  	%rd4, %rd2, %rd3;
	mov.u64 	%rd5, 1065353216;
	st.u32 	[%rd4+4], %rd5;
	st.u32 	[%rd4], %rd5;
	mov.u32 	%r3, 1065353216;
	st.u32 	[%rd4+8], %r3;
	ret;
}

	// .globl	__closesthit__phong_alphaTrans
.visible .entry __closesthit__phong_alphaTrans(

)
{
	.local .align 4 .b8 	__local_depot7[24];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<4>;
	.reg .f32 	%f<268>;
	.reg .b32 	%r<28>;
	.reg .b64 	%rd<49>;


	mov.u64 	%SPL, __local_depot7;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd9, %SP, 0;
	add.u64 	%rd10, %SPL, 0;
	mov.u64 	%rd11, 1065353216;
	st.local.u32 	[%rd10+4], %rd11;
	st.local.u32 	[%rd10], %rd11;
	mov.u32 	%r4, 1065353216;
	st.local.u32 	[%rd10+8], %r4;
	ld.const.u64 	%rd12, [optixLaunchParams+80];
	cvta.to.global.u64 	%rd13, %rd12;
	ld.global.v4.f32 	{%f40, %f41, %f42, %f43}, [%rd13];
	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd14, %r1;
	shl.b64 	%rd15, %rd14, 32;
	cvt.u64.u32	%rd16, %r2;
	or.b64  	%rd1, %rd15, %rd16;
	// inline asm
	call (%rd8), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	// inline asm
	call (%r3), _optix_read_primitive_idx, ();
	// inline asm
	ld.u64 	%rd17, [%rd8];
	mul.wide.s32 	%rd18, %r3, 12;
	add.s64 	%rd19, %rd17, %rd18;
	ld.u32 	%rd3, [%rd19];
	ld.u32 	%rd4, [%rd19+4];
	ld.u32 	%rd5, [%rd19+8];
	// inline asm
	call (%f38, %f39), _optix_get_triangle_barycentrics, ();
	// inline asm
	ld.u32 	%r5, [%rd8+48];
	setp.eq.s32	%p1, %r5, 0;
	@%p1 bra 	BB7_3;

	ld.u64 	%rd6, [%rd8+24];
	setp.eq.s64	%p2, %rd6, 0;
	@%p2 bra 	BB7_3;

	mov.f32 	%f44, 0f3F800000;
	sub.ftz.f32 	%f45, %f44, %f38;
	sub.ftz.f32 	%f257, %f45, %f39;
	shl.b64 	%rd20, %rd3, 4;
	add.s64 	%rd21, %rd6, %rd20;
	ld.v2.f32 	{%f46, %f47}, [%rd21];
	shl.b64 	%rd22, %rd4, 4;
	add.s64 	%rd23, %rd6, %rd22;
	ld.v2.f32 	{%f50, %f51}, [%rd23];
	mul.ftz.f32 	%f54, %f38, %f50;
	mul.ftz.f32 	%f55, %f38, %f51;
	fma.rn.ftz.f32 	%f56, %f257, %f46, %f54;
	fma.rn.ftz.f32 	%f57, %f257, %f47, %f55;
	shl.b64 	%rd24, %rd5, 4;
	add.s64 	%rd25, %rd6, %rd24;
	ld.v2.f32 	{%f58, %f59}, [%rd25];
	fma.rn.ftz.f32 	%f62, %f39, %f58, %f56;
	fma.rn.ftz.f32 	%f63, %f39, %f59, %f57;
	ld.u64 	%rd26, [%rd8+56];
	tex.2d.v4.f32.f32	{%f258, %f259, %f260, %f261}, [%rd26, {%f62, %f63}];
	bra.uni 	BB7_4;

BB7_3:
	ld.v2.f32 	{%f258, %f259}, [%rd8+64];
	ld.f32 	%f260, [%rd8+72];
	mov.f32 	%f261, 0f3F800000;
	sub.ftz.f32 	%f67, %f261, %f38;
	sub.ftz.f32 	%f257, %f67, %f39;

BB7_4:
	cvt.u32.u64	%r24, %rd3;
	cvt.u32.u64	%r25, %rd4;
	cvt.u32.u64	%r26, %rd5;
	ld.u64 	%rd29, [%rd8+16];
	mul.wide.u32 	%rd30, %r24, 16;
	add.s64 	%rd31, %rd29, %rd30;
	ld.v4.f32 	{%f89, %f90, %f91, %f92}, [%rd31];
	mov.u32 	%r12, 0;
	mov.u32 	%r21, 1;
	mov.u32 	%r20, 2;
	mul.wide.u32 	%rd32, %r25, 16;
	add.s64 	%rd33, %rd29, %rd32;
	ld.v4.f32 	{%f97, %f98, %f99, %f100}, [%rd33];
	mul.ftz.f32 	%f105, %f38, %f97;
	mul.ftz.f32 	%f106, %f38, %f98;
	mul.ftz.f32 	%f107, %f38, %f99;
	mul.ftz.f32 	%f108, %f38, %f100;
	fma.rn.ftz.f32 	%f109, %f257, %f89, %f105;
	fma.rn.ftz.f32 	%f110, %f257, %f90, %f106;
	fma.rn.ftz.f32 	%f111, %f257, %f91, %f107;
	fma.rn.ftz.f32 	%f112, %f257, %f92, %f108;
	mul.wide.u32 	%rd34, %r26, 16;
	add.s64 	%rd35, %rd29, %rd34;
	ld.v4.f32 	{%f113, %f114, %f115, %f116}, [%rd35];
	fma.rn.ftz.f32 	%f121, %f39, %f113, %f109;
	fma.rn.ftz.f32 	%f122, %f39, %f114, %f110;
	fma.rn.ftz.f32 	%f123, %f39, %f115, %f111;
	fma.rn.ftz.f32 	%f124, %f39, %f116, %f112;
	ld.u64 	%rd36, [%rd8+8];
	add.s64 	%rd37, %rd36, %rd30;
	ld.v4.f32 	{%f125, %f126, %f127, %f128}, [%rd37];
	add.s64 	%rd38, %rd36, %rd32;
	ld.v4.f32 	{%f132, %f133, %f134, %f135}, [%rd38];
	mul.ftz.f32 	%f139, %f38, %f132;
	mul.ftz.f32 	%f140, %f38, %f133;
	mul.ftz.f32 	%f141, %f38, %f134;
	fma.rn.ftz.f32 	%f142, %f257, %f125, %f139;
	fma.rn.ftz.f32 	%f143, %f257, %f126, %f140;
	fma.rn.ftz.f32 	%f144, %f257, %f127, %f141;
	add.s64 	%rd39, %rd36, %rd34;
	ld.v4.f32 	{%f145, %f146, %f147, %f148}, [%rd39];
	fma.rn.ftz.f32 	%f71, %f39, %f145, %f142;
	fma.rn.ftz.f32 	%f72, %f39, %f146, %f143;
	fma.rn.ftz.f32 	%f73, %f39, %f147, %f144;
	ld.const.u64 	%rd27, [optixLaunchParams+72];
	// inline asm
	call (%f68), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f69), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f70), _optix_get_world_ray_direction_z, ();
	// inline asm
	cvt.u32.u64	%r14, %rd9;
	shr.u64 	%rd41, %rd9, 32;
	cvt.u32.u64	%r13, %rd41;
	mov.u32 	%r17, 255;
	mov.f32 	%f86, 0f3A83126F;
	mov.f32 	%f87, 0f60AD78EC;
	mov.f32 	%f265, 0f00000000;
	// inline asm
	call (%r6, %r7), _optix_trace_2, (%rd27, %f71, %f72, %f73, %f68, %f69, %f70, %f86, %f87, %f265, %r17, %r21, %r12, %r20, %r12, %r13, %r14);
	// inline asm
	add.u64 	%rd42, %SP, 12;
	add.u64 	%rd7, %SPL, 12;
	st.local.u32 	[%rd7+4], %rd11;
	st.local.u32 	[%rd7], %rd11;
	st.local.u32 	[%rd7+8], %r4;
	shr.u64 	%rd44, %rd42, 32;
	cvt.u32.u64	%r22, %rd44;
	cvt.u32.u64	%r23, %rd42;
	neg.ftz.f32 	%f83, %f40;
	neg.ftz.f32 	%f84, %f41;
	neg.ftz.f32 	%f85, %f42;
	// inline asm
	call (%r15, %r16), _optix_trace_2, (%rd27, %f71, %f72, %f73, %f83, %f84, %f85, %f86, %f87, %f265, %r17, %r21, %r21, %r20, %r21, %r22, %r23);
	// inline asm
	mul.ftz.f32 	%f152, %f41, %f41;
	fma.rn.ftz.f32 	%f153, %f40, %f40, %f152;
	fma.rn.ftz.f32 	%f154, %f42, %f42, %f153;
	fma.rn.ftz.f32 	%f155, %f43, %f43, %f154;
	rsqrt.approx.ftz.f32 	%f156, %f155;
	mul.ftz.f32 	%f157, %f40, %f156;
	mul.ftz.f32 	%f158, %f41, %f156;
	mul.ftz.f32 	%f159, %f42, %f156;
	mul.ftz.f32 	%f160, %f43, %f156;
	mul.ftz.f32 	%f161, %f122, %f122;
	fma.rn.ftz.f32 	%f162, %f121, %f121, %f161;
	fma.rn.ftz.f32 	%f163, %f123, %f123, %f162;
	fma.rn.ftz.f32 	%f164, %f124, %f124, %f163;
	rsqrt.approx.ftz.f32 	%f165, %f164;
	mul.ftz.f32 	%f166, %f121, %f165;
	mul.ftz.f32 	%f167, %f122, %f165;
	mul.ftz.f32 	%f168, %f123, %f165;
	mul.ftz.f32 	%f169, %f124, %f165;
	mul.ftz.f32 	%f170, %f157, %f166;
	mul.ftz.f32 	%f171, %f158, %f167;
	neg.ftz.f32 	%f172, %f171;
	sub.ftz.f32 	%f173, %f172, %f170;
	mul.ftz.f32 	%f174, %f159, %f168;
	sub.ftz.f32 	%f175, %f173, %f174;
	mul.ftz.f32 	%f176, %f160, %f169;
	sub.ftz.f32 	%f177, %f175, %f176;
	max.ftz.f32 	%f21, %f177, %f265;
	ld.const.v2.f32 	{%f178, %f179}, [optixLaunchParams+24];
	sub.ftz.f32 	%f182, %f71, %f178;
	sub.ftz.f32 	%f183, %f72, %f179;
	ld.const.f32 	%f184, [optixLaunchParams+32];
	sub.ftz.f32 	%f185, %f73, %f184;
	mul.ftz.f32 	%f186, %f183, %f183;
	fma.rn.ftz.f32 	%f187, %f182, %f182, %f186;
	fma.rn.ftz.f32 	%f188, %f185, %f185, %f187;
	rsqrt.approx.ftz.f32 	%f189, %f188;
	mul.ftz.f32 	%f190, %f182, %f189;
	mul.ftz.f32 	%f191, %f183, %f189;
	mul.ftz.f32 	%f192, %f185, %f189;
	neg.ftz.f32 	%f193, %f43;
	add.ftz.f32 	%f194, %f121, %f121;
	add.ftz.f32 	%f195, %f122, %f122;
	add.ftz.f32 	%f196, %f123, %f123;
	add.ftz.f32 	%f197, %f124, %f124;
	mul.ftz.f32 	%f198, %f121, %f83;
	mul.ftz.f32 	%f199, %f122, %f41;
	sub.ftz.f32 	%f200, %f198, %f199;
	mul.ftz.f32 	%f201, %f123, %f42;
	sub.ftz.f32 	%f202, %f200, %f201;
	mul.ftz.f32 	%f203, %f124, %f43;
	sub.ftz.f32 	%f204, %f202, %f203;
	mul.ftz.f32 	%f205, %f194, %f204;
	mul.ftz.f32 	%f206, %f195, %f204;
	mul.ftz.f32 	%f207, %f196, %f204;
	mul.ftz.f32 	%f208, %f197, %f204;
	sub.ftz.f32 	%f209, %f83, %f205;
	sub.ftz.f32 	%f210, %f84, %f206;
	sub.ftz.f32 	%f211, %f85, %f207;
	sub.ftz.f32 	%f212, %f193, %f208;
	mul.ftz.f32 	%f213, %f210, %f210;
	fma.rn.ftz.f32 	%f214, %f209, %f209, %f213;
	fma.rn.ftz.f32 	%f215, %f211, %f211, %f214;
	fma.rn.ftz.f32 	%f216, %f212, %f212, %f215;
	rsqrt.approx.ftz.f32 	%f217, %f216;
	mul.ftz.f32 	%f218, %f209, %f217;
	mul.ftz.f32 	%f219, %f210, %f217;
	mul.ftz.f32 	%f220, %f211, %f217;
	mul.ftz.f32 	%f221, %f191, %f219;
	fma.rn.ftz.f32 	%f222, %f190, %f218, %f221;
	fma.rn.ftz.f32 	%f22, %f192, %f220, %f222;
	setp.gt.ftz.f32	%p3, %f22, 0f00000000;
	@%p3 bra 	BB7_6;
	bra.uni 	BB7_5;

BB7_6:
	lg2.approx.ftz.f32 	%f226, %f22;
	ex2.approx.ftz.f32 	%f227, %f226;
	ld.local.f32 	%f264, [%rd10];
	mul.ftz.f32 	%f228, %f227, %f264;
	ld.local.f32 	%f263, [%rd10+4];
	mul.ftz.f32 	%f229, %f227, %f263;
	ld.local.f32 	%f262, [%rd10+8];
	mul.ftz.f32 	%f230, %f227, %f262;
	mul.ftz.f32 	%f265, %f228, 0f3E4CCCCD;
	mul.ftz.f32 	%f266, %f229, 0f3E4CCCCD;
	mul.ftz.f32 	%f267, %f230, 0f3E4CCCCD;
	bra.uni 	BB7_7;

BB7_5:
	ld.local.f32 	%f264, [%rd10];
	ld.local.f32 	%f263, [%rd10+4];
	ld.local.f32 	%f262, [%rd10+8];
	mov.f32 	%f266, %f265;
	mov.f32 	%f267, %f265;

BB7_7:
	ld.local.f32 	%f231, [%rd7];
	mul.ftz.f32 	%f232, %f258, %f231;
	ld.local.f32 	%f233, [%rd7+4];
	mul.ftz.f32 	%f234, %f259, %f233;
	ld.local.f32 	%f235, [%rd7+8];
	mul.ftz.f32 	%f236, %f260, %f235;
	mul.ftz.f32 	%f237, %f21, %f232;
	mul.ftz.f32 	%f238, %f21, %f234;
	mul.ftz.f32 	%f239, %f21, %f236;
	mul.ftz.f32 	%f240, %f237, 0f3F19999A;
	mul.ftz.f32 	%f241, %f238, 0f3F19999A;
	mul.ftz.f32 	%f242, %f239, 0f3F19999A;
	fma.rn.ftz.f32 	%f243, %f258, 0f3E4CCCCD, %f240;
	fma.rn.ftz.f32 	%f244, %f259, 0f3E4CCCCD, %f241;
	fma.rn.ftz.f32 	%f245, %f260, 0f3E4CCCCD, %f242;
	add.ftz.f32 	%f246, %f265, %f243;
	add.ftz.f32 	%f247, %f266, %f244;
	add.ftz.f32 	%f248, %f267, %f245;
	mul.ftz.f32 	%f249, %f261, %f246;
	mul.ftz.f32 	%f250, %f261, %f247;
	mul.ftz.f32 	%f251, %f261, %f248;
	mov.f32 	%f252, 0f3F800000;
	sub.ftz.f32 	%f253, %f252, %f261;
	fma.rn.ftz.f32 	%f254, %f253, %f264, %f249;
	fma.rn.ftz.f32 	%f255, %f253, %f263, %f250;
	fma.rn.ftz.f32 	%f256, %f253, %f262, %f251;
	st.f32 	[%rd1], %f254;
	st.f32 	[%rd1+4], %f255;
	st.f32 	[%rd1+8], %f256;
	ret;
}

	// .globl	__anyhit__phong_alphaTrans
.visible .entry __anyhit__phong_alphaTrans(

)
{



	ret;
}

	// .globl	__miss__phong_alphaTrans
.visible .entry __miss__phong_alphaTrans(

)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<7>;


	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd1, %r1;
	shl.b64 	%rd2, %rd1, 32;
	cvt.u64.u32	%rd3, %r2;
	or.b64  	%rd4, %rd2, %rd3;
	mov.u64 	%rd5, 0;
	st.u32 	[%rd4+4], %rd5;
	mov.u64 	%rd6, 1065353216;
	st.u32 	[%rd4], %rd6;
	mov.u32 	%r3, 0;
	st.u32 	[%rd4+8], %r3;
	ret;
}

	// .globl	__anyhit__shadow_alphaTrans
.visible .entry __anyhit__shadow_alphaTrans(

)
{



	ret;
}

	// .globl	__closesthit__shadow_alphaTrans
.visible .entry __closesthit__shadow_alphaTrans(

)
{
	.local .align 4 .b8 	__local_depot11[12];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<3>;
	.reg .f32 	%f<83>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<33>;


	mov.u64 	%SPL, __local_depot11;
	cvta.local.u64 	%SP, %SPL;
	// inline asm
	call (%rd6), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	// inline asm
	call (%r1), _optix_read_primitive_idx, ();
	// inline asm
	ld.u64 	%rd7, [%rd6];
	mul.wide.s32 	%rd8, %r1, 12;
	add.s64 	%rd9, %rd7, %rd8;
	ld.u32 	%rd2, [%rd9];
	ld.u32 	%rd3, [%rd9+4];
	ld.u32 	%rd4, [%rd9+8];
	// inline asm
	call (%f5, %f6), _optix_get_triangle_barycentrics, ();
	// inline asm
	ld.u32 	%r2, [%rd6+48];
	setp.eq.s32	%p1, %r2, 0;
	@%p1 bra 	BB11_3;

	ld.u64 	%rd5, [%rd6+24];
	setp.eq.s64	%p2, %rd5, 0;
	@%p2 bra 	BB11_3;

	mov.f32 	%f9, 0f3F800000;
	sub.ftz.f32 	%f10, %f9, %f5;
	sub.ftz.f32 	%f11, %f10, %f6;
	shl.b64 	%rd10, %rd2, 4;
	add.s64 	%rd11, %rd5, %rd10;
	ld.v2.f32 	{%f12, %f13}, [%rd11];
	shl.b64 	%rd12, %rd3, 4;
	add.s64 	%rd13, %rd5, %rd12;
	ld.v2.f32 	{%f16, %f17}, [%rd13];
	mul.ftz.f32 	%f20, %f5, %f16;
	mul.ftz.f32 	%f21, %f5, %f17;
	fma.rn.ftz.f32 	%f22, %f11, %f12, %f20;
	fma.rn.ftz.f32 	%f23, %f11, %f13, %f21;
	shl.b64 	%rd14, %rd4, 4;
	add.s64 	%rd15, %rd5, %rd14;
	ld.v2.f32 	{%f24, %f25}, [%rd15];
	fma.rn.ftz.f32 	%f28, %f6, %f24, %f22;
	fma.rn.ftz.f32 	%f29, %f6, %f25, %f23;
	ld.u64 	%rd16, [%rd6+56];
	tex.2d.v4.f32.f32	{%f30, %f31, %f32, %f82}, [%rd16, {%f28, %f29}];

BB11_3:
	// inline asm
	call (%r3), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r4), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd18, %r3;
	shl.b64 	%rd19, %rd18, 32;
	cvt.u64.u32	%rd20, %r4;
	or.b64  	%rd21, %rd19, %rd20;
	mov.f32 	%f45, 0f3F800000;
	sub.ftz.f32 	%f46, %f45, %f5;
	sub.ftz.f32 	%f47, %f46, %f6;
	cvt.u32.u64	%r14, %rd2;
	ld.u64 	%rd22, [%rd6+8];
	mul.wide.u32 	%rd23, %r14, 16;
	add.s64 	%rd24, %rd22, %rd23;
	ld.v4.f32 	{%f48, %f49, %f50, %f51}, [%rd24];
	mov.u32 	%r11, 1;
	mov.u32 	%r10, 2;
	cvt.u32.u64	%r15, %rd3;
	mul.wide.u32 	%rd25, %r15, 16;
	add.s64 	%rd26, %rd22, %rd25;
	ld.v4.f32 	{%f55, %f56, %f57, %f58}, [%rd26];
	mul.ftz.f32 	%f62, %f5, %f55;
	mul.ftz.f32 	%f63, %f5, %f56;
	mul.ftz.f32 	%f64, %f5, %f57;
	fma.rn.ftz.f32 	%f65, %f47, %f48, %f62;
	fma.rn.ftz.f32 	%f66, %f47, %f49, %f63;
	fma.rn.ftz.f32 	%f67, %f47, %f50, %f64;
	cvt.u32.u64	%r16, %rd4;
	mul.wide.u32 	%rd27, %r16, 16;
	add.s64 	%rd28, %rd22, %rd27;
	ld.v4.f32 	{%f68, %f69, %f70, %f71}, [%rd28];
	fma.rn.ftz.f32 	%f36, %f6, %f68, %f65;
	fma.rn.ftz.f32 	%f37, %f6, %f69, %f66;
	fma.rn.ftz.f32 	%f38, %f6, %f70, %f67;
	add.u64 	%rd29, %SP, 0;
	add.u64 	%rd30, %SPL, 0;
	mov.u64 	%rd31, 1065353216;
	st.local.u32 	[%rd30+4], %rd31;
	st.local.u32 	[%rd30], %rd31;
	mov.u32 	%r17, 1065353216;
	st.local.u32 	[%rd30+8], %r17;
	shr.u64 	%rd32, %rd29, 32;
	cvt.u32.u64	%r12, %rd32;
	cvt.u32.u64	%r13, %rd29;
	ld.const.u64 	%rd17, [optixLaunchParams+72];
	// inline asm
	call (%f33), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f34), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f35), _optix_get_world_ray_direction_z, ();
	// inline asm
	mov.u32 	%r7, 255;
	mov.f32 	%f42, 0f3A83126F;
	mov.f32 	%f43, 0f60AD78EC;
	mov.f32 	%f44, 0f00000000;
	// inline asm
	call (%r5, %r6), _optix_trace_2, (%rd17, %f36, %f37, %f38, %f33, %f34, %f35, %f42, %f43, %f44, %r7, %r11, %r11, %r10, %r11, %r12, %r13);
	// inline asm
	ld.local.f32 	%f75, [%rd30];
	sub.ftz.f32 	%f76, %f45, %f82;
	mul.ftz.f32 	%f77, %f76, %f75;
	ld.local.f32 	%f78, [%rd30+4];
	mul.ftz.f32 	%f79, %f76, %f78;
	ld.local.f32 	%f80, [%rd30+8];
	mul.ftz.f32 	%f81, %f76, %f80;
	st.f32 	[%rd21], %f77;
	st.f32 	[%rd21+4], %f79;
	st.f32 	[%rd21+8], %f81;
	ret;
}

	// .globl	__miss__shadow_alphaTrans
.visible .entry __miss__shadow_alphaTrans(

)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<7>;


	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd1, %r1;
	shl.b64 	%rd2, %rd1, 32;
	cvt.u64.u32	%rd3, %r2;
	or.b64  	%rd4, %rd2, %rd3;
	mov.u64 	%rd5, 0;
	st.u32 	[%rd4+4], %rd5;
	mov.u64 	%rd6, 1065353216;
	st.u32 	[%rd4], %rd6;
	mov.u32 	%r3, 0;
	st.u32 	[%rd4+8], %r3;
	ret;
}

	// .globl	__closesthit__phong_glass
.visible .entry __closesthit__phong_glass(

)
{
	.local .align 4 .b8 	__local_depot13[36];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<4>;
	.reg .f32 	%f<298>;
	.reg .b32 	%r<37>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<54>;


	mov.u64 	%SPL, __local_depot13;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd11, %SP, 0;
	add.u64 	%rd12, %SPL, 0;
	mov.u64 	%rd13, 1065353216;
	st.local.u32 	[%rd12+4], %rd13;
	st.local.u32 	[%rd12], %rd13;
	mov.u32 	%r4, 1065353216;
	st.local.u32 	[%rd12+8], %r4;
	ld.const.u64 	%rd14, [optixLaunchParams+80];
	cvta.to.global.u64 	%rd15, %rd14;
	ld.global.v4.f32 	{%f38, %f39, %f40, %f41}, [%rd15];
	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd16, %r1;
	shl.b64 	%rd17, %rd16, 32;
	cvt.u64.u32	%rd18, %r2;
	or.b64  	%rd1, %rd17, %rd18;
	// inline asm
	call (%rd10), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	// inline asm
	call (%r3), _optix_read_primitive_idx, ();
	// inline asm
	ld.u64 	%rd19, [%rd10];
	mul.wide.s32 	%rd20, %r3, 12;
	add.s64 	%rd21, %rd19, %rd20;
	ld.u32 	%rd3, [%rd21];
	ld.u32 	%rd4, [%rd21+4];
	ld.u32 	%rd5, [%rd21+8];
	// inline asm
	call (%f36, %f37), _optix_get_triangle_barycentrics, ();
	// inline asm
	ld.u32 	%r5, [%rd10+48];
	setp.eq.s32	%p1, %r5, 0;
	@%p1 bra 	BB13_3;

	ld.u64 	%rd6, [%rd10+24];
	setp.eq.s64	%p2, %rd6, 0;
	@%p2 bra 	BB13_3;

	mov.f32 	%f42, 0f3F800000;
	sub.ftz.f32 	%f43, %f42, %f36;
	sub.ftz.f32 	%f291, %f43, %f37;
	shl.b64 	%rd22, %rd3, 4;
	add.s64 	%rd23, %rd6, %rd22;
	ld.v2.f32 	{%f44, %f45}, [%rd23];
	shl.b64 	%rd24, %rd4, 4;
	add.s64 	%rd25, %rd6, %rd24;
	ld.v2.f32 	{%f48, %f49}, [%rd25];
	mul.ftz.f32 	%f52, %f36, %f48;
	mul.ftz.f32 	%f53, %f36, %f49;
	fma.rn.ftz.f32 	%f54, %f291, %f44, %f52;
	fma.rn.ftz.f32 	%f55, %f291, %f45, %f53;
	shl.b64 	%rd26, %rd5, 4;
	add.s64 	%rd27, %rd6, %rd26;
	ld.v2.f32 	{%f56, %f57}, [%rd27];
	fma.rn.ftz.f32 	%f60, %f37, %f56, %f54;
	fma.rn.ftz.f32 	%f61, %f37, %f57, %f55;
	ld.u64 	%rd28, [%rd10+56];
	tex.2d.v4.f32.f32	{%f290, %f289, %f288, %f62}, [%rd28, {%f60, %f61}];
	st.f32 	[%rd1], %f290;
	st.f32 	[%rd1+4], %f289;
	st.f32 	[%rd1+8], %f288;
	bra.uni 	BB13_4;

BB13_3:
	ld.v2.f32 	{%f290, %f289}, [%rd10+64];
	ld.f32 	%f288, [%rd10+72];
	st.f32 	[%rd1], %f290;
	st.f32 	[%rd1+4], %f289;
	st.f32 	[%rd1+8], %f288;
	mov.f32 	%f65, 0f3F800000;
	sub.ftz.f32 	%f66, %f65, %f36;
	sub.ftz.f32 	%f291, %f66, %f37;

BB13_4:
	cvt.u32.u64	%r33, %rd3;
	cvt.u32.u64	%r34, %rd4;
	cvt.u32.u64	%r35, %rd5;
	ld.u64 	%rd32, [%rd10+16];
	mul.wide.u32 	%rd33, %r33, 16;
	add.s64 	%rd34, %rd32, %rd33;
	ld.v4.f32 	{%f97, %f98, %f99, %f100}, [%rd34];
	mov.u32 	%r21, 0;
	mov.u32 	%r30, 1;
	mov.u32 	%r29, 2;
	mul.wide.u32 	%rd35, %r34, 16;
	add.s64 	%rd36, %rd32, %rd35;
	ld.v4.f32 	{%f105, %f106, %f107, %f108}, [%rd36];
	mul.ftz.f32 	%f113, %f36, %f105;
	mul.ftz.f32 	%f114, %f36, %f106;
	mul.ftz.f32 	%f115, %f36, %f107;
	mul.ftz.f32 	%f116, %f36, %f108;
	fma.rn.ftz.f32 	%f117, %f291, %f97, %f113;
	fma.rn.ftz.f32 	%f118, %f291, %f98, %f114;
	fma.rn.ftz.f32 	%f119, %f291, %f99, %f115;
	fma.rn.ftz.f32 	%f120, %f291, %f100, %f116;
	mul.wide.u32 	%rd37, %r35, 16;
	add.s64 	%rd38, %rd32, %rd37;
	ld.v4.f32 	{%f121, %f122, %f123, %f124}, [%rd38];
	fma.rn.ftz.f32 	%f129, %f37, %f121, %f117;
	fma.rn.ftz.f32 	%f130, %f37, %f122, %f118;
	fma.rn.ftz.f32 	%f131, %f37, %f123, %f119;
	fma.rn.ftz.f32 	%f132, %f37, %f124, %f120;
	mul.ftz.f32 	%f133, %f39, %f39;
	fma.rn.ftz.f32 	%f134, %f38, %f38, %f133;
	fma.rn.ftz.f32 	%f135, %f40, %f40, %f134;
	fma.rn.ftz.f32 	%f136, %f41, %f41, %f135;
	rsqrt.approx.ftz.f32 	%f137, %f136;
	mul.ftz.f32 	%f138, %f38, %f137;
	mul.ftz.f32 	%f139, %f39, %f137;
	mul.ftz.f32 	%f140, %f40, %f137;
	mul.ftz.f32 	%f141, %f41, %f137;
	mul.ftz.f32 	%f142, %f130, %f130;
	fma.rn.ftz.f32 	%f143, %f129, %f129, %f142;
	fma.rn.ftz.f32 	%f144, %f131, %f131, %f143;
	fma.rn.ftz.f32 	%f145, %f132, %f132, %f144;
	rsqrt.approx.ftz.f32 	%f146, %f145;
	mul.ftz.f32 	%f147, %f129, %f146;
	mul.ftz.f32 	%f148, %f130, %f146;
	mul.ftz.f32 	%f149, %f131, %f146;
	mul.ftz.f32 	%f150, %f132, %f146;
	mul.ftz.f32 	%f151, %f138, %f147;
	mul.ftz.f32 	%f152, %f139, %f148;
	add.ftz.f32 	%f153, %f151, %f152;
	mul.ftz.f32 	%f154, %f140, %f149;
	add.ftz.f32 	%f155, %f154, %f153;
	mul.ftz.f32 	%f156, %f141, %f150;
	add.ftz.f32 	%f157, %f156, %f155;
	cvt.ftz.f64.f32	%fd1, %f157;
	mov.f64 	%fd2, 0d0000000000000000;
	max.f64 	%fd3, %fd1, %fd2;
	cvt.rn.ftz.f32.f64	%f158, %fd3;
	mov.f32 	%f159, 0f3F800000;
	sub.ftz.f32 	%f160, %f159, %f158;
	mul.ftz.f32 	%f161, %f290, %f160;
	mul.ftz.f32 	%f162, %f289, %f160;
	mul.ftz.f32 	%f163, %f160, %f288;
	st.f32 	[%rd1], %f161;
	st.f32 	[%rd1+4], %f162;
	st.f32 	[%rd1+8], %f163;
	// inline asm
	call (%f67), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f68), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f69), _optix_get_world_ray_direction_z, ();
	// inline asm
	mul.ftz.f32 	%f164, %f130, %f68;
	fma.rn.ftz.f32 	%f165, %f129, %f67, %f164;
	fma.rn.ftz.f32 	%f166, %f131, %f69, %f165;
	add.ftz.f32 	%f167, %f166, %f166;
	mul.ftz.f32 	%f168, %f129, %f167;
	mul.ftz.f32 	%f169, %f130, %f167;
	mul.ftz.f32 	%f170, %f131, %f167;
	sub.ftz.f32 	%f73, %f67, %f168;
	sub.ftz.f32 	%f74, %f68, %f169;
	sub.ftz.f32 	%f75, %f69, %f170;
	ld.u64 	%rd39, [%rd10+8];
	add.s64 	%rd40, %rd39, %rd33;
	ld.v4.f32 	{%f171, %f172, %f173, %f174}, [%rd40];
	add.s64 	%rd41, %rd39, %rd35;
	ld.v4.f32 	{%f178, %f179, %f180, %f181}, [%rd41];
	mul.ftz.f32 	%f185, %f36, %f178;
	mul.ftz.f32 	%f186, %f36, %f179;
	mul.ftz.f32 	%f187, %f36, %f180;
	fma.rn.ftz.f32 	%f188, %f291, %f171, %f185;
	fma.rn.ftz.f32 	%f189, %f291, %f172, %f186;
	fma.rn.ftz.f32 	%f190, %f291, %f173, %f187;
	add.s64 	%rd42, %rd39, %rd37;
	ld.v4.f32 	{%f191, %f192, %f193, %f194}, [%rd42];
	fma.rn.ftz.f32 	%f70, %f37, %f191, %f188;
	fma.rn.ftz.f32 	%f71, %f37, %f192, %f189;
	fma.rn.ftz.f32 	%f72, %f37, %f193, %f190;
	ld.const.u64 	%rd29, [optixLaunchParams+72];
	shr.u64 	%rd44, %rd11, 32;
	cvt.u32.u64	%r13, %rd44;
	cvt.u32.u64	%r14, %rd11;
	mov.u32 	%r26, 255;
	mov.f32 	%f94, 0f3A83126F;
	mov.f32 	%f95, 0f60AD78EC;
	mov.f32 	%f295, 0f00000000;
	// inline asm
	call (%r6, %r7), _optix_trace_2, (%rd29, %f70, %f71, %f72, %f73, %f74, %f75, %f94, %f95, %f295, %r26, %r30, %r21, %r29, %r21, %r13, %r14);
	// inline asm
	add.u64 	%rd45, %SP, 12;
	add.u64 	%rd8, %SPL, 12;
	st.local.u32 	[%rd8+4], %rd13;
	st.local.u32 	[%rd8], %rd13;
	st.local.u32 	[%rd8+8], %r4;
	shr.u64 	%rd47, %rd45, 32;
	cvt.u32.u64	%r22, %rd47;
	cvt.u32.u64	%r23, %rd45;
	// inline asm
	call (%r15, %r16), _optix_trace_2, (%rd29, %f70, %f71, %f72, %f67, %f68, %f69, %f94, %f95, %f295, %r26, %r30, %r21, %r29, %r21, %r22, %r23);
	// inline asm
	add.u64 	%rd48, %SP, 24;
	add.u64 	%rd9, %SPL, 24;
	st.local.u32 	[%rd9+4], %rd13;
	st.local.u32 	[%rd9], %rd13;
	st.local.u32 	[%rd9+8], %r4;
	shr.u64 	%rd49, %rd48, 32;
	cvt.u32.u64	%r31, %rd49;
	cvt.u32.u64	%r32, %rd48;
	neg.ftz.f32 	%f91, %f38;
	neg.ftz.f32 	%f92, %f39;
	neg.ftz.f32 	%f93, %f40;
	// inline asm
	call (%r24, %r25), _optix_trace_2, (%rd29, %f70, %f71, %f72, %f91, %f92, %f93, %f94, %f95, %f295, %r26, %r30, %r30, %r29, %r30, %r31, %r32);
	// inline asm
	neg.ftz.f32 	%f198, %f152;
	sub.ftz.f32 	%f199, %f198, %f151;
	sub.ftz.f32 	%f200, %f199, %f154;
	sub.ftz.f32 	%f201, %f200, %f156;
	max.ftz.f32 	%f19, %f201, %f295;
	ld.const.v2.f32 	{%f202, %f203}, [optixLaunchParams+24];
	sub.ftz.f32 	%f206, %f70, %f202;
	sub.ftz.f32 	%f207, %f71, %f203;
	ld.const.f32 	%f208, [optixLaunchParams+32];
	sub.ftz.f32 	%f209, %f72, %f208;
	mul.ftz.f32 	%f210, %f207, %f207;
	fma.rn.ftz.f32 	%f211, %f206, %f206, %f210;
	fma.rn.ftz.f32 	%f212, %f209, %f209, %f211;
	rsqrt.approx.ftz.f32 	%f213, %f212;
	mul.ftz.f32 	%f214, %f206, %f213;
	mul.ftz.f32 	%f215, %f207, %f213;
	mul.ftz.f32 	%f216, %f209, %f213;
	neg.ftz.f32 	%f217, %f41;
	add.ftz.f32 	%f218, %f129, %f129;
	add.ftz.f32 	%f219, %f130, %f130;
	add.ftz.f32 	%f220, %f131, %f131;
	add.ftz.f32 	%f221, %f132, %f132;
	mul.ftz.f32 	%f222, %f129, %f91;
	mul.ftz.f32 	%f223, %f130, %f39;
	sub.ftz.f32 	%f224, %f222, %f223;
	mul.ftz.f32 	%f225, %f131, %f40;
	sub.ftz.f32 	%f226, %f224, %f225;
	mul.ftz.f32 	%f227, %f132, %f41;
	sub.ftz.f32 	%f228, %f226, %f227;
	mul.ftz.f32 	%f229, %f218, %f228;
	mul.ftz.f32 	%f230, %f219, %f228;
	mul.ftz.f32 	%f231, %f220, %f228;
	mul.ftz.f32 	%f232, %f221, %f228;
	sub.ftz.f32 	%f233, %f91, %f229;
	sub.ftz.f32 	%f234, %f92, %f230;
	sub.ftz.f32 	%f235, %f93, %f231;
	sub.ftz.f32 	%f236, %f217, %f232;
	mul.ftz.f32 	%f237, %f234, %f234;
	fma.rn.ftz.f32 	%f238, %f233, %f233, %f237;
	fma.rn.ftz.f32 	%f239, %f235, %f235, %f238;
	fma.rn.ftz.f32 	%f240, %f236, %f236, %f239;
	rsqrt.approx.ftz.f32 	%f241, %f240;
	mul.ftz.f32 	%f242, %f233, %f241;
	mul.ftz.f32 	%f243, %f234, %f241;
	mul.ftz.f32 	%f244, %f235, %f241;
	mul.ftz.f32 	%f245, %f215, %f243;
	fma.rn.ftz.f32 	%f246, %f214, %f242, %f245;
	fma.rn.ftz.f32 	%f20, %f216, %f244, %f246;
	setp.gt.ftz.f32	%p3, %f20, 0f00000000;
	@%p3 bra 	BB13_6;
	bra.uni 	BB13_5;

BB13_6:
	lg2.approx.ftz.f32 	%f250, %f20;
	ex2.approx.ftz.f32 	%f251, %f250;
	ld.local.f32 	%f294, [%rd12];
	mul.ftz.f32 	%f252, %f251, %f294;
	ld.local.f32 	%f293, [%rd12+4];
	mul.ftz.f32 	%f253, %f251, %f293;
	ld.local.f32 	%f292, [%rd12+8];
	mul.ftz.f32 	%f254, %f251, %f292;
	mul.ftz.f32 	%f295, %f252, 0f3E4CCCCD;
	mul.ftz.f32 	%f296, %f253, 0f3E4CCCCD;
	mul.ftz.f32 	%f297, %f254, 0f3E4CCCCD;
	bra.uni 	BB13_7;

BB13_5:
	ld.local.f32 	%f294, [%rd12];
	ld.local.f32 	%f293, [%rd12+4];
	ld.local.f32 	%f292, [%rd12+8];
	mov.f32 	%f296, %f295;
	mov.f32 	%f297, %f295;

BB13_7:
	ld.f32 	%f255, [%rd1];
	ld.f32 	%f256, [%rd1+4];
	ld.f32 	%f257, [%rd1+8];
	ld.local.f32 	%f258, [%rd9];
	mul.ftz.f32 	%f259, %f255, %f258;
	ld.local.f32 	%f260, [%rd9+4];
	mul.ftz.f32 	%f261, %f256, %f260;
	ld.local.f32 	%f262, [%rd9+8];
	mul.ftz.f32 	%f263, %f257, %f262;
	mul.ftz.f32 	%f264, %f19, %f259;
	mul.ftz.f32 	%f265, %f19, %f261;
	mul.ftz.f32 	%f266, %f19, %f263;
	mul.ftz.f32 	%f267, %f264, 0f3F19999A;
	mul.ftz.f32 	%f268, %f265, 0f3F19999A;
	mul.ftz.f32 	%f269, %f266, 0f3F19999A;
	fma.rn.ftz.f32 	%f270, %f255, 0f3E4CCCCD, %f267;
	fma.rn.ftz.f32 	%f271, %f256, 0f3E4CCCCD, %f268;
	fma.rn.ftz.f32 	%f272, %f257, 0f3E4CCCCD, %f269;
	add.ftz.f32 	%f273, %f295, %f270;
	add.ftz.f32 	%f274, %f296, %f271;
	add.ftz.f32 	%f275, %f297, %f272;
	mul.ftz.f32 	%f276, %f274, 0f3DCCCCCD;
	mul.ftz.f32 	%f277, %f275, 0f3DCCCCCD;
	ld.local.f32 	%f278, [%rd8];
	mul.ftz.f32 	%f279, %f278, 0f3F4CCCCD;
	ld.local.f32 	%f280, [%rd8+4];
	ld.local.f32 	%f281, [%rd8+8];
	fma.rn.ftz.f32 	%f282, %f273, 0f3DCCCCCD, %f279;
	fma.rn.ftz.f32 	%f283, %f280, 0f3F4CCCCD, %f276;
	fma.rn.ftz.f32 	%f284, %f281, 0f3F4CCCCD, %f277;
	fma.rn.ftz.f32 	%f285, %f294, 0f3DCCCCCD, %f282;
	fma.rn.ftz.f32 	%f286, %f293, 0f3DCCCCCD, %f283;
	fma.rn.ftz.f32 	%f287, %f292, 0f3DCCCCCD, %f284;
	st.f32 	[%rd1], %f285;
	st.f32 	[%rd1+4], %f286;
	st.f32 	[%rd1+8], %f287;
	ret;
}

	// .globl	__anyhit__phong_glass
.visible .entry __anyhit__phong_glass(

)
{



	ret;
}

	// .globl	__miss__phong_glass
.visible .entry __miss__phong_glass(

)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<7>;


	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd1, %r1;
	shl.b64 	%rd2, %rd1, 32;
	cvt.u64.u32	%rd3, %r2;
	or.b64  	%rd4, %rd2, %rd3;
	mov.u64 	%rd5, 1060320051;
	st.u32 	[%rd4+4], %rd5;
	mov.u64 	%rd6, 0;
	st.u32 	[%rd4], %rd6;
	mov.u32 	%r3, 1065353216;
	st.u32 	[%rd4+8], %r3;
	ret;
}

	// .globl	__anyhit__shadow_glass
.visible .entry __anyhit__shadow_glass(

)
{



	ret;
}

	// .globl	__closesthit__shadow_glass
.visible .entry __closesthit__shadow_glass(

)
{
	.local .align 4 .b8 	__local_depot17[12];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .f32 	%f<51>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<21>;


	mov.u64 	%SPL, __local_depot17;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd3, %SP, 0;
	add.u64 	%rd4, %SPL, 0;
	mov.u64 	%rd5, 1065353216;
	st.local.u32 	[%rd4+4], %rd5;
	st.local.u32 	[%rd4], %rd5;
	mov.u32 	%r13, 1065353216;
	st.local.u32 	[%rd4+8], %r13;
	shr.u64 	%rd6, %rd3, 32;
	cvt.u32.u64	%r11, %rd6;
	cvt.u32.u64	%r12, %rd3;
	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd7, %r1;
	shl.b64 	%rd8, %rd7, 32;
	cvt.u64.u32	%rd9, %r2;
	or.b64  	%rd10, %rd8, %rd9;
	// inline asm
	call (%rd1), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	// inline asm
	call (%r3), _optix_read_primitive_idx, ();
	// inline asm
	ld.u64 	%rd11, [%rd1];
	mul.wide.s32 	%rd12, %r3, 12;
	add.s64 	%rd13, %rd11, %rd12;
	ld.u32 	%r14, [%rd13];
	ld.u32 	%r15, [%rd13+4];
	ld.u32 	%r16, [%rd13+8];
	// inline asm
	call (%f1, %f2), _optix_get_triangle_barycentrics, ();
	// inline asm
	mov.f32 	%f15, 0f3F800000;
	sub.ftz.f32 	%f16, %f15, %f1;
	sub.ftz.f32 	%f17, %f16, %f2;
	ld.u64 	%rd14, [%rd1+8];
	mul.wide.u32 	%rd15, %r14, 16;
	add.s64 	%rd16, %rd14, %rd15;
	ld.v4.f32 	{%f18, %f19, %f20, %f21}, [%rd16];
	mov.u32 	%r10, 1;
	mov.u32 	%r9, 2;
	mul.wide.u32 	%rd17, %r15, 16;
	add.s64 	%rd18, %rd14, %rd17;
	ld.v4.f32 	{%f25, %f26, %f27, %f28}, [%rd18];
	mul.ftz.f32 	%f32, %f1, %f25;
	mul.ftz.f32 	%f33, %f1, %f26;
	mul.ftz.f32 	%f34, %f1, %f27;
	fma.rn.ftz.f32 	%f35, %f18, %f17, %f32;
	fma.rn.ftz.f32 	%f36, %f19, %f17, %f33;
	fma.rn.ftz.f32 	%f37, %f20, %f17, %f34;
	mul.wide.u32 	%rd19, %r16, 16;
	add.s64 	%rd20, %rd14, %rd19;
	ld.v4.f32 	{%f38, %f39, %f40, %f41}, [%rd20];
	fma.rn.ftz.f32 	%f6, %f2, %f38, %f35;
	fma.rn.ftz.f32 	%f7, %f2, %f39, %f36;
	fma.rn.ftz.f32 	%f8, %f2, %f40, %f37;
	ld.const.u64 	%rd2, [optixLaunchParams+72];
	// inline asm
	call (%f3), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f4), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f5), _optix_get_world_ray_direction_z, ();
	// inline asm
	mov.u32 	%r6, 255;
	mov.f32 	%f12, 0f3A83126F;
	mov.f32 	%f13, 0f60AD78EC;
	mov.f32 	%f14, 0f00000000;
	// inline asm
	call (%r4, %r5), _optix_trace_2, (%rd2, %f6, %f7, %f8, %f3, %f4, %f5, %f12, %f13, %f14, %r6, %r10, %r10, %r9, %r10, %r11, %r12);
	// inline asm
	ld.local.f32 	%f45, [%rd4];
	mul.ftz.f32 	%f46, %f45, 0f3F666666;
	ld.local.f32 	%f47, [%rd4+4];
	mul.ftz.f32 	%f48, %f47, 0f3F666666;
	ld.local.f32 	%f49, [%rd4+8];
	mul.ftz.f32 	%f50, %f49, 0f3F666666;
	st.f32 	[%rd10], %f46;
	st.f32 	[%rd10+4], %f48;
	st.f32 	[%rd10+8], %f50;
	ret;
}

	// .globl	__miss__shadow_glass
.visible .entry __miss__shadow_glass(

)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<6>;


	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd1, %r1;
	shl.b64 	%rd2, %rd1, 32;
	cvt.u64.u32	%rd3, %r2;
	or.b64  	%rd4, %rd2, %rd3;
	mov.u64 	%rd5, 1065353216;
	st.u32 	[%rd4+4], %rd5;
	st.u32 	[%rd4], %rd5;
	mov.u32 	%r3, 1065353216;
	st.u32 	[%rd4+8], %r3;
	ret;
}


