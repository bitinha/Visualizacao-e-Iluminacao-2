//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-25769353
// Cuda compilation tools, release 10.1, V10.1.105
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_30
.address_size 64

	// .globl	__closesthit__radiance
.const .align 8 .b8 optixLaunchParams[88];

.visible .entry __closesthit__radiance(

)
{
	.local .align 4 .b8 	__local_depot0[12];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<5>;
	.reg .f32 	%f<131>;
	.reg .b32 	%r<109>;
	.reg .b64 	%rd<29>;


	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd6, %SP, 0;
	add.u64 	%rd1, %SPL, 0;
	mov.u64 	%rd7, 1065353216;
	st.local.u32 	[%rd1+4], %rd7;
	st.local.u32 	[%rd1], %rd7;
	mov.u32 	%r21, 1065353216;
	st.local.u32 	[%rd1+8], %r21;
	ld.const.u32 	%r22, [optixLaunchParams+16];
	cvt.rn.f32.s32	%f1, %r22;
	// inline asm
	call (%r15), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r16), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd8, %r15;
	shl.b64 	%rd9, %rd8, 32;
	cvt.u64.u32	%rd10, %r16;
	or.b64  	%rd2, %rd9, %rd10;
	mov.u64 	%rd11, 0;
	st.u32 	[%rd2+4], %rd11;
	st.u32 	[%rd2], %rd11;
	mov.u32 	%r23, 0;
	st.u32 	[%rd2+8], %r23;
	// inline asm
	call (%rd5), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	// inline asm
	call (%r17), _optix_read_primitive_idx, ();
	// inline asm
	ld.u64 	%rd12, [%rd5];
	mul.wide.s32 	%rd13, %r17, 12;
	add.s64 	%rd14, %rd12, %rd13;
	ld.u32 	%r24, [%rd14];
	ld.u32 	%r25, [%rd14+4];
	ld.u32 	%r26, [%rd14+8];
	// inline asm
	call (%r18), _optix_get_launch_index_x, ();
	// inline asm
	// inline asm
	call (%r19), _optix_get_launch_index_y, ();
	// inline asm
	// inline asm
	call (%f19, %f20), _optix_get_triangle_barycentrics, ();
	// inline asm
	mov.f32 	%f21, 0f3F800000;
	sub.ftz.f32 	%f22, %f21, %f19;
	sub.ftz.f32 	%f23, %f22, %f20;
	ld.u64 	%rd15, [%rd5+8];
	mul.wide.u32 	%rd16, %r24, 16;
	add.s64 	%rd17, %rd15, %rd16;
	ld.v4.f32 	{%f24, %f25, %f26, %f27}, [%rd17];
	mul.wide.u32 	%rd18, %r25, 16;
	add.s64 	%rd19, %rd15, %rd18;
	ld.v4.f32 	{%f31, %f32, %f33, %f34}, [%rd19];
	mul.ftz.f32 	%f38, %f19, %f31;
	mul.ftz.f32 	%f39, %f19, %f32;
	mul.ftz.f32 	%f40, %f19, %f33;
	fma.rn.ftz.f32 	%f41, %f24, %f23, %f38;
	fma.rn.ftz.f32 	%f42, %f25, %f23, %f39;
	fma.rn.ftz.f32 	%f43, %f26, %f23, %f40;
	mul.wide.u32 	%rd20, %r26, 16;
	add.s64 	%rd21, %rd15, %rd20;
	ld.v4.f32 	{%f44, %f45, %f46, %f47}, [%rd21];
	fma.rn.ftz.f32 	%f2, %f20, %f44, %f41;
	fma.rn.ftz.f32 	%f3, %f20, %f45, %f42;
	fma.rn.ftz.f32 	%f4, %f20, %f46, %f43;
	ld.u64 	%rd22, [%rd5+16];
	add.s64 	%rd23, %rd22, %rd16;
	ld.v4.f32 	{%f51, %f52, %f53, %f54}, [%rd23];
	add.s64 	%rd24, %rd22, %rd18;
	ld.v4.f32 	{%f58, %f59, %f60, %f61}, [%rd24];
	mul.ftz.f32 	%f65, %f19, %f58;
	mul.ftz.f32 	%f66, %f19, %f59;
	mul.ftz.f32 	%f67, %f19, %f60;
	fma.rn.ftz.f32 	%f68, %f23, %f51, %f65;
	fma.rn.ftz.f32 	%f69, %f23, %f52, %f66;
	fma.rn.ftz.f32 	%f70, %f23, %f53, %f67;
	add.s64 	%rd25, %rd22, %rd20;
	ld.v4.f32 	{%f71, %f72, %f73, %f74}, [%rd25];
	fma.rn.ftz.f32 	%f5, %f20, %f71, %f68;
	fma.rn.ftz.f32 	%f6, %f20, %f72, %f69;
	fma.rn.ftz.f32 	%f7, %f20, %f73, %f70;
	setp.leu.ftz.f32	%p1, %f1, 0f00000000;
	@%p1 bra 	BB0_5;

	shr.u64 	%rd27, %rd6, 32;
	cvt.u32.u64	%r108, %rd6;
	cvt.u32.u64	%r107, %rd27;
	neg.ftz.f32 	%f79, %f6;
	setp.gt.ftz.f32	%p2, %f5, %f7;
	selp.f32	%f8, %f79, %f6, %p2;
	mul.ftz.f32 	%f9, %f5, %f8;
	selp.f32	%f10, %f5, %f7, %p2;
	mul.ftz.f32 	%f11, %f6, %f10;
	mul.ftz.f32 	%f12, %f7, 0f00000000;
	ld.const.u64 	%rd4, [optixLaunchParams+72];
	mul.ftz.f32 	%f80, %f1, %f1;
	rcp.approx.ftz.f32 	%f13, %f80;
	mov.f32 	%f78, 0f00000000;
	// inline asm
	call (%r29), _optix_get_launch_dimension_x, ();
	// inline asm
	mad.lo.s32 	%r41, %r29, %r18, %r19;
	mov.f32 	%f129, %f78;
	mov.u32 	%r103, %r23;

BB0_2:
	mul.ftz.f32 	%f15, %f1, %f129;
	mov.f32 	%f130, %f78;
	mov.u32 	%r106, %r23;

BB0_3:
	add.ftz.f32 	%f91, %f15, %f130;
	cvt.rzi.ftz.u32.f32	%r42, %f91;
	shl.b32 	%r43, %r42, 4;
	add.s32 	%r44, %r43, -1556008596;
	add.s32 	%r45, %r42, -1640531527;
	shr.u32 	%r46, %r42, 5;
	add.s32 	%r47, %r46, -939442524;
	xor.b32  	%r48, %r44, %r45;
	xor.b32  	%r49, %r48, %r47;
	add.s32 	%r50, %r41, %r49;
	shl.b32 	%r51, %r50, 4;
	add.s32 	%r52, %r51, -1383041155;
	add.s32 	%r53, %r50, -1640531527;
	xor.b32  	%r54, %r52, %r53;
	shr.u32 	%r55, %r50, 5;
	add.s32 	%r56, %r55, 2123724318;
	xor.b32  	%r57, %r54, %r56;
	add.s32 	%r58, %r57, %r42;
	shl.b32 	%r59, %r58, 4;
	add.s32 	%r60, %r59, -1556008596;
	add.s32 	%r61, %r58, 1013904242;
	shr.u32 	%r62, %r58, 5;
	add.s32 	%r63, %r62, -939442524;
	xor.b32  	%r64, %r60, %r61;
	xor.b32  	%r65, %r64, %r63;
	add.s32 	%r66, %r65, %r50;
	shl.b32 	%r67, %r66, 4;
	add.s32 	%r68, %r67, -1383041155;
	add.s32 	%r69, %r66, 1013904242;
	xor.b32  	%r70, %r68, %r69;
	shr.u32 	%r71, %r66, 5;
	add.s32 	%r72, %r71, 2123724318;
	xor.b32  	%r73, %r70, %r72;
	add.s32 	%r74, %r73, %r58;
	shl.b32 	%r75, %r74, 4;
	add.s32 	%r76, %r75, -1556008596;
	add.s32 	%r77, %r74, -626627285;
	shr.u32 	%r78, %r74, 5;
	add.s32 	%r79, %r78, -939442524;
	xor.b32  	%r80, %r76, %r77;
	xor.b32  	%r81, %r80, %r79;
	add.s32 	%r82, %r81, %r66;
	shl.b32 	%r83, %r82, 4;
	add.s32 	%r84, %r83, -1383041155;
	add.s32 	%r85, %r82, -626627285;
	xor.b32  	%r86, %r84, %r85;
	shr.u32 	%r87, %r82, 5;
	add.s32 	%r88, %r87, 2123724318;
	xor.b32  	%r89, %r86, %r88;
	add.s32 	%r90, %r89, %r74;
	shl.b32 	%r91, %r90, 4;
	add.s32 	%r92, %r91, -1556008596;
	add.s32 	%r93, %r90, 2027808484;
	shr.u32 	%r94, %r90, 5;
	add.s32 	%r95, %r94, -939442524;
	xor.b32  	%r96, %r92, %r93;
	xor.b32  	%r97, %r96, %r95;
	add.s32 	%r98, %r97, %r82;
	mad.lo.s32 	%r99, %r98, 1664525, 1013904223;
	and.b32  	%r100, %r99, 16777215;
	cvt.rn.f32.u32	%f92, %r100;
	mov.f32 	%f93, 0f4B800000;
	div.approx.ftz.f32 	%f94, %f92, %f93;
	mad.lo.s32 	%r101, %r99, 1664525, 7271263;
	and.b32  	%r102, %r101, 16777215;
	cvt.rn.f32.u32	%f95, %r102;
	div.approx.ftz.f32 	%f96, %f95, %f93;
	sqrt.approx.ftz.f32 	%f97, %f94;
	mul.ftz.f32 	%f98, %f96, 0f40C90FDB;
	sin.approx.ftz.f32 	%f99, %f98;
	mul.ftz.f32 	%f100, %f97, %f99;
	cos.approx.ftz.f32 	%f101, %f98;
	mul.ftz.f32 	%f102, %f97, %f101;
	mul.ftz.f32 	%f103, %f97, %f97;
	sub.ftz.f32 	%f105, %f21, %f103;
	sqrt.approx.ftz.f32 	%f106, %f105;
	mul.ftz.f32 	%f107, %f5, %f106;
	mul.ftz.f32 	%f108, %f6, %f106;
	mul.ftz.f32 	%f109, %f7, %f106;
	fma.rn.ftz.f32 	%f110, %f8, %f100, %f107;
	fma.rn.ftz.f32 	%f111, %f10, %f100, %f108;
	fma.rn.ftz.f32 	%f112, %f100, 0f00000000, %f109;
	fma.rn.ftz.f32 	%f113, %f9, %f102, %f110;
	fma.rn.ftz.f32 	%f114, %f11, %f102, %f111;
	fma.rn.ftz.f32 	%f115, %f12, %f102, %f112;
	mul.ftz.f32 	%f116, %f114, %f114;
	fma.rn.ftz.f32 	%f117, %f113, %f113, %f116;
	fma.rn.ftz.f32 	%f118, %f115, %f115, %f117;
	rsqrt.approx.ftz.f32 	%f119, %f118;
	mul.ftz.f32 	%f85, %f119, %f113;
	mul.ftz.f32 	%f86, %f119, %f114;
	mul.ftz.f32 	%f87, %f119, %f115;
	mov.u32 	%r34, 255;
	mov.u32 	%r37, 2;
	mov.u32 	%r38, 1;
	mov.f32 	%f88, 0f3A83126F;
	mov.f32 	%f89, 0f43960000;
	// inline asm
	call (%r107, %r108), _optix_trace_2, (%rd4, %f2, %f3, %f4, %f85, %f86, %f87, %f88, %f89, %f78, %r34, %r38, %r38, %r37, %r38, %r107, %r108);
	// inline asm
	ld.local.f32 	%f120, [%rd1];
	ld.local.f32 	%f121, [%rd1+4];
	ld.local.f32 	%f122, [%rd1+8];
	ld.f32 	%f123, [%rd2];
	fma.rn.ftz.f32 	%f124, %f13, %f120, %f123;
	ld.f32 	%f125, [%rd2+4];
	ld.f32 	%f126, [%rd2+8];
	st.f32 	[%rd2], %f124;
	fma.rn.ftz.f32 	%f127, %f13, %f121, %f125;
	st.f32 	[%rd2+4], %f127;
	fma.rn.ftz.f32 	%f128, %f13, %f122, %f126;
	st.f32 	[%rd2+8], %f128;
	add.s32 	%r106, %r106, 1;
	cvt.rn.f32.s32	%f130, %r106;
	setp.lt.ftz.f32	%p3, %f130, %f1;
	@%p3 bra 	BB0_3;

	add.s32 	%r103, %r103, 1;
	cvt.rn.f32.s32	%f129, %r103;
	setp.lt.ftz.f32	%p4, %f129, %f1;
	@%p4 bra 	BB0_2;

BB0_5:
	ret;
}

	// .globl	__anyhit__radiance
.visible .entry __anyhit__radiance(

)
{



	ret;
}

	// .globl	__miss__radiance
.visible .entry __miss__radiance(

)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<7>;


	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd1, %r1;
	shl.b64 	%rd2, %rd1, 32;
	cvt.u64.u32	%rd3, %r2;
	or.b64  	%rd4, %rd2, %rd3;
	mov.u64 	%rd5, 1060320051;
	st.u32 	[%rd4+4], %rd5;
	mov.u64 	%rd6, 0;
	st.u32 	[%rd4], %rd6;
	mov.u32 	%r3, 1065353216;
	st.u32 	[%rd4+8], %r3;
	ret;
}

	// .globl	__raygen__renderFrame
.visible .entry __raygen__renderFrame(

)
{
	.local .align 4 .b8 	__local_depot3[12];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .f32 	%f<57>;
	.reg .b32 	%r<26>;
	.reg .b64 	%rd<10>;


	mov.u64 	%SPL, __local_depot3;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd2, %SP, 0;
	add.u64 	%rd3, %SPL, 0;
	// inline asm
	call (%r1), _optix_get_launch_index_x, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_launch_index_y, ();
	// inline asm
	mov.u64 	%rd4, 1065353216;
	st.local.u32 	[%rd3+4], %rd4;
	st.local.u32 	[%rd3], %rd4;
	mov.u32 	%r16, 1065353216;
	st.local.u32 	[%rd3+8], %r16;
	shr.u64 	%rd5, %rd2, 32;
	cvt.u32.u64	%r14, %rd5;
	cvt.u32.u64	%r15, %rd2;
	cvt.rn.f32.s32	%f10, %r1;
	add.ftz.f32 	%f11, %f10, 0f3F000000;
	cvt.rn.f32.s32	%f12, %r2;
	add.ftz.f32 	%f13, %f12, 0f3F000000;
	// inline asm
	call (%r4), _optix_get_launch_dimension_x, ();
	// inline asm
	// inline asm
	call (%r5), _optix_get_launch_dimension_y, ();
	// inline asm
	cvt.rn.f32.u32	%f14, %r4;
	cvt.rn.f32.u32	%f15, %r5;
	div.approx.ftz.f32 	%f16, %f11, %f14;
	div.approx.ftz.f32 	%f17, %f13, %f15;
	fma.rn.ftz.f32 	%f18, %f16, 0f40000000, 0fBF800000;
	fma.rn.ftz.f32 	%f19, %f17, 0f40000000, 0fBF800000;
	ld.const.v2.f32 	{%f20, %f21}, [optixLaunchParams+48];
	mov.u32 	%r13, 0;
	mov.u32 	%r10, 1;
	ld.const.v2.f32 	{%f24, %f25}, [optixLaunchParams+56];
	ld.const.v2.f32 	{%f28, %f29}, [optixLaunchParams+32];
	fma.rn.ftz.f32 	%f31, %f20, %f18, %f29;
	ld.const.v2.f32 	{%f32, %f33}, [optixLaunchParams+40];
	fma.rn.ftz.f32 	%f36, %f18, %f21, %f32;
	fma.rn.ftz.f32 	%f37, %f18, %f24, %f33;
	ld.const.v2.f32 	{%f38, %f39}, [optixLaunchParams+64];
	fma.rn.ftz.f32 	%f42, %f19, %f25, %f31;
	fma.rn.ftz.f32 	%f43, %f19, %f38, %f36;
	fma.rn.ftz.f32 	%f44, %f19, %f39, %f37;
	mul.ftz.f32 	%f45, %f43, %f43;
	fma.rn.ftz.f32 	%f46, %f42, %f42, %f45;
	fma.rn.ftz.f32 	%f47, %f44, %f44, %f46;
	rsqrt.approx.ftz.f32 	%f48, %f47;
	mul.ftz.f32 	%f4, %f42, %f48;
	mul.ftz.f32 	%f5, %f43, %f48;
	mul.ftz.f32 	%f6, %f44, %f48;
	ld.const.u64 	%rd1, [optixLaunchParams+72];
	ld.const.v2.f32 	{%f49, %f50}, [optixLaunchParams+24];
	mov.u32 	%r9, 255;
	mov.u32 	%r12, 2;
	mov.f32 	%f8, 0f60AD78EC;
	mov.f32 	%f9, 0f00000000;
	// inline asm
	call (%r7, %r8), _optix_trace_2, (%rd1, %f49, %f50, %f28, %f4, %f5, %f6, %f9, %f8, %f9, %r9, %r10, %r13, %r12, %r13, %r14, %r15);
	// inline asm
	ld.local.f32 	%f51, [%rd3];
	mul.ftz.f32 	%f52, %f51, 0f437F0000;
	cvt.rzi.ftz.s32.f32	%r17, %f52;
	ld.local.f32 	%f53, [%rd3+4];
	mul.ftz.f32 	%f54, %f53, 0f437F0000;
	cvt.rzi.ftz.s32.f32	%r18, %f54;
	ld.local.f32 	%f55, [%rd3+8];
	mul.ftz.f32 	%f56, %f55, 0f437F0000;
	cvt.rzi.ftz.s32.f32	%r19, %f56;
	shl.b32 	%r20, %r18, 8;
	shl.b32 	%r21, %r19, 16;
	or.b32  	%r22, %r17, %r20;
	or.b32  	%r23, %r22, %r21;
	or.b32  	%r24, %r23, -16777216;
	mad.lo.s32 	%r25, %r4, %r2, %r1;
	ld.const.u64 	%rd6, [optixLaunchParams+8];
	cvta.to.global.u64 	%rd7, %rd6;
	mul.wide.u32 	%rd8, %r25, 4;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.u32 	[%rd9], %r24;
	ret;
}

	// .globl	__anyhit__shadow
.visible .entry __anyhit__shadow(

)
{



	ret;
}

	// .globl	__closesthit__shadow
.visible .entry __closesthit__shadow(

)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<6>;


	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd1, %r1;
	shl.b64 	%rd2, %rd1, 32;
	cvt.u64.u32	%rd3, %r2;
	or.b64  	%rd4, %rd2, %rd3;
	mov.u64 	%rd5, 0;
	st.u32 	[%rd4+4], %rd5;
	st.u32 	[%rd4], %rd5;
	mov.u32 	%r3, 0;
	st.u32 	[%rd4+8], %r3;
	ret;
}

	// .globl	__miss__shadow
.visible .entry __miss__shadow(

)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<6>;


	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd1, %r1;
	shl.b64 	%rd2, %rd1, 32;
	cvt.u64.u32	%rd3, %r2;
	or.b64  	%rd4, %rd2, %rd3;
	mov.u64 	%rd5, 1065353216;
	st.u32 	[%rd4+4], %rd5;
	st.u32 	[%rd4], %rd5;
	mov.u32 	%r3, 1065353216;
	st.u32 	[%rd4+8], %r3;
	ret;
}

	// .globl	__closesthit__phong_glass
.visible .entry __closesthit__phong_glass(

)
{
	.local .align 4 .b8 	__local_depot7[36];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<4>;
	.reg .f32 	%f<308>;
	.reg .b32 	%r<37>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<54>;


	mov.u64 	%SPL, __local_depot7;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd11, %SP, 0;
	add.u64 	%rd12, %SPL, 0;
	mov.u64 	%rd13, 1065353216;
	st.local.u32 	[%rd12+4], %rd13;
	st.local.u32 	[%rd12], %rd13;
	mov.u32 	%r4, 1065353216;
	st.local.u32 	[%rd12+8], %r4;
	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd14, %r1;
	shl.b64 	%rd15, %rd14, 32;
	cvt.u64.u32	%rd16, %r2;
	or.b64  	%rd1, %rd15, %rd16;
	// inline asm
	call (%rd10), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	// inline asm
	call (%r3), _optix_read_primitive_idx, ();
	// inline asm
	ld.u64 	%rd17, [%rd10];
	mul.wide.s32 	%rd18, %r3, 12;
	add.s64 	%rd19, %rd17, %rd18;
	ld.u32 	%rd3, [%rd19];
	ld.u32 	%rd4, [%rd19+4];
	ld.u32 	%rd5, [%rd19+8];
	// inline asm
	call (%f32, %f33), _optix_get_triangle_barycentrics, ();
	// inline asm
	ld.u32 	%r5, [%rd10+48];
	setp.eq.s32	%p1, %r5, 0;
	@%p1 bra 	BB7_3;

	ld.u64 	%rd6, [%rd10+24];
	setp.eq.s64	%p2, %rd6, 0;
	@%p2 bra 	BB7_3;

	mov.f32 	%f34, 0f3F800000;
	sub.ftz.f32 	%f35, %f34, %f32;
	sub.ftz.f32 	%f301, %f35, %f33;
	shl.b64 	%rd20, %rd3, 4;
	add.s64 	%rd21, %rd6, %rd20;
	ld.v2.f32 	{%f36, %f37}, [%rd21];
	shl.b64 	%rd22, %rd4, 4;
	add.s64 	%rd23, %rd6, %rd22;
	ld.v2.f32 	{%f40, %f41}, [%rd23];
	mul.ftz.f32 	%f44, %f32, %f40;
	mul.ftz.f32 	%f45, %f32, %f41;
	fma.rn.ftz.f32 	%f46, %f301, %f36, %f44;
	fma.rn.ftz.f32 	%f47, %f301, %f37, %f45;
	shl.b64 	%rd24, %rd5, 4;
	add.s64 	%rd25, %rd6, %rd24;
	ld.v2.f32 	{%f48, %f49}, [%rd25];
	fma.rn.ftz.f32 	%f52, %f33, %f48, %f46;
	fma.rn.ftz.f32 	%f53, %f33, %f49, %f47;
	ld.u64 	%rd26, [%rd10+56];
	tex.2d.v4.f32.f32	{%f300, %f299, %f298, %f54}, [%rd26, {%f52, %f53}];
	st.f32 	[%rd1], %f300;
	st.f32 	[%rd1+4], %f299;
	st.f32 	[%rd1+8], %f298;
	bra.uni 	BB7_4;

BB7_3:
	ld.v2.f32 	{%f300, %f299}, [%rd10+64];
	ld.f32 	%f298, [%rd10+72];
	st.f32 	[%rd1], %f300;
	st.f32 	[%rd1+4], %f299;
	st.f32 	[%rd1+8], %f298;
	mov.f32 	%f57, 0f3F800000;
	sub.ftz.f32 	%f58, %f57, %f32;
	sub.ftz.f32 	%f301, %f58, %f33;

BB7_4:
	cvt.u32.u64	%r33, %rd3;
	cvt.u32.u64	%r34, %rd4;
	cvt.u32.u64	%r35, %rd5;
	ld.u64 	%rd30, [%rd10+16];
	mul.wide.u32 	%rd31, %r33, 16;
	add.s64 	%rd32, %rd30, %rd31;
	ld.v4.f32 	{%f89, %f90, %f91, %f92}, [%rd32];
	mov.u32 	%r21, 0;
	mov.u32 	%r30, 1;
	mov.u32 	%r29, 2;
	mul.wide.u32 	%rd33, %r34, 16;
	add.s64 	%rd34, %rd30, %rd33;
	ld.v4.f32 	{%f97, %f98, %f99, %f100}, [%rd34];
	mul.ftz.f32 	%f105, %f32, %f97;
	mul.ftz.f32 	%f106, %f32, %f98;
	mul.ftz.f32 	%f107, %f32, %f99;
	mul.ftz.f32 	%f108, %f32, %f100;
	fma.rn.ftz.f32 	%f109, %f301, %f89, %f105;
	fma.rn.ftz.f32 	%f110, %f301, %f90, %f106;
	fma.rn.ftz.f32 	%f111, %f301, %f91, %f107;
	fma.rn.ftz.f32 	%f112, %f301, %f92, %f108;
	mul.wide.u32 	%rd35, %r35, 16;
	add.s64 	%rd36, %rd30, %rd35;
	ld.v4.f32 	{%f113, %f114, %f115, %f116}, [%rd36];
	fma.rn.ftz.f32 	%f121, %f33, %f113, %f109;
	fma.rn.ftz.f32 	%f122, %f33, %f114, %f110;
	fma.rn.ftz.f32 	%f123, %f33, %f115, %f111;
	fma.rn.ftz.f32 	%f124, %f33, %f116, %f112;
	// inline asm
	call (%f59), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f60), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f61), _optix_get_world_ray_direction_z, ();
	// inline asm
	mul.ftz.f32 	%f125, %f122, %f60;
	fma.rn.ftz.f32 	%f126, %f121, %f59, %f125;
	fma.rn.ftz.f32 	%f127, %f123, %f61, %f126;
	add.ftz.f32 	%f128, %f127, %f127;
	mul.ftz.f32 	%f129, %f121, %f128;
	mul.ftz.f32 	%f130, %f122, %f128;
	mul.ftz.f32 	%f131, %f123, %f128;
	sub.ftz.f32 	%f65, %f59, %f129;
	sub.ftz.f32 	%f66, %f60, %f130;
	sub.ftz.f32 	%f67, %f61, %f131;
	ld.u64 	%rd37, [%rd10+8];
	add.s64 	%rd38, %rd37, %rd31;
	ld.v4.f32 	{%f132, %f133, %f134, %f135}, [%rd38];
	add.s64 	%rd39, %rd37, %rd33;
	ld.v4.f32 	{%f140, %f141, %f142, %f143}, [%rd39];
	mul.ftz.f32 	%f148, %f32, %f140;
	mul.ftz.f32 	%f149, %f32, %f141;
	mul.ftz.f32 	%f150, %f32, %f142;
	mul.ftz.f32 	%f151, %f32, %f143;
	fma.rn.ftz.f32 	%f152, %f301, %f132, %f148;
	fma.rn.ftz.f32 	%f153, %f301, %f133, %f149;
	fma.rn.ftz.f32 	%f154, %f301, %f134, %f150;
	fma.rn.ftz.f32 	%f155, %f301, %f135, %f151;
	add.s64 	%rd40, %rd37, %rd35;
	ld.v4.f32 	{%f156, %f157, %f158, %f159}, [%rd40];
	fma.rn.ftz.f32 	%f62, %f33, %f156, %f152;
	fma.rn.ftz.f32 	%f63, %f33, %f157, %f153;
	fma.rn.ftz.f32 	%f64, %f33, %f158, %f154;
	fma.rn.ftz.f32 	%f164, %f33, %f159, %f155;
	ld.const.u64 	%rd41, [optixLaunchParams+80];
	cvta.to.global.u64 	%rd42, %rd41;
	ld.global.v4.f32 	{%f165, %f166, %f167, %f168}, [%rd42];
	sub.ftz.f32 	%f173, %f62, %f165;
	sub.ftz.f32 	%f174, %f63, %f166;
	sub.ftz.f32 	%f175, %f64, %f167;
	sub.ftz.f32 	%f176, %f164, %f168;
	mul.ftz.f32 	%f177, %f174, %f174;
	fma.rn.ftz.f32 	%f178, %f173, %f173, %f177;
	fma.rn.ftz.f32 	%f179, %f175, %f175, %f178;
	fma.rn.ftz.f32 	%f180, %f176, %f176, %f179;
	rsqrt.approx.ftz.f32 	%f181, %f180;
	mul.ftz.f32 	%f182, %f173, %f181;
	mul.ftz.f32 	%f183, %f174, %f181;
	mul.ftz.f32 	%f184, %f175, %f181;
	mul.ftz.f32 	%f185, %f176, %f181;
	mul.ftz.f32 	%f186, %f122, %f122;
	fma.rn.ftz.f32 	%f187, %f121, %f121, %f186;
	fma.rn.ftz.f32 	%f188, %f123, %f123, %f187;
	fma.rn.ftz.f32 	%f189, %f124, %f124, %f188;
	rsqrt.approx.ftz.f32 	%f190, %f189;
	mul.ftz.f32 	%f191, %f121, %f190;
	mul.ftz.f32 	%f192, %f122, %f190;
	mul.ftz.f32 	%f193, %f123, %f190;
	mul.ftz.f32 	%f194, %f124, %f190;
	mul.ftz.f32 	%f195, %f182, %f191;
	mul.ftz.f32 	%f196, %f183, %f192;
	add.ftz.f32 	%f197, %f195, %f196;
	mul.ftz.f32 	%f198, %f184, %f193;
	add.ftz.f32 	%f199, %f198, %f197;
	mul.ftz.f32 	%f200, %f185, %f194;
	add.ftz.f32 	%f201, %f200, %f199;
	cvt.ftz.f64.f32	%fd1, %f201;
	mov.f64 	%fd2, 0d0000000000000000;
	max.f64 	%fd3, %fd1, %fd2;
	cvt.rn.ftz.f32.f64	%f202, %fd3;
	mov.f32 	%f203, 0f3F800000;
	sub.ftz.f32 	%f204, %f203, %f202;
	mul.ftz.f32 	%f205, %f300, %f204;
	mul.ftz.f32 	%f206, %f299, %f204;
	mul.ftz.f32 	%f207, %f204, %f298;
	st.f32 	[%rd1], %f205;
	st.f32 	[%rd1+4], %f206;
	st.f32 	[%rd1+8], %f207;
	ld.const.u64 	%rd27, [optixLaunchParams+72];
	shr.u64 	%rd44, %rd11, 32;
	cvt.u32.u64	%r13, %rd44;
	cvt.u32.u64	%r14, %rd11;
	mov.u32 	%r26, 255;
	mov.f32 	%f86, 0f3A83126F;
	mov.f32 	%f87, 0f60AD78EC;
	mov.f32 	%f305, 0f00000000;
	// inline asm
	call (%r6, %r7), _optix_trace_2, (%rd27, %f62, %f63, %f64, %f65, %f66, %f67, %f86, %f87, %f305, %r26, %r30, %r21, %r29, %r21, %r13, %r14);
	// inline asm
	add.u64 	%rd45, %SP, 12;
	add.u64 	%rd8, %SPL, 12;
	st.local.u32 	[%rd8+4], %rd13;
	st.local.u32 	[%rd8], %rd13;
	st.local.u32 	[%rd8+8], %r4;
	shr.u64 	%rd47, %rd45, 32;
	cvt.u32.u64	%r22, %rd47;
	cvt.u32.u64	%r23, %rd45;
	// inline asm
	call (%r15, %r16), _optix_trace_2, (%rd27, %f62, %f63, %f64, %f59, %f60, %f61, %f86, %f87, %f305, %r26, %r30, %r21, %r29, %r21, %r22, %r23);
	// inline asm
	add.u64 	%rd48, %SP, 24;
	add.u64 	%rd9, %SPL, 24;
	st.local.u32 	[%rd9+4], %rd13;
	st.local.u32 	[%rd9], %rd13;
	st.local.u32 	[%rd9+8], %r4;
	shr.u64 	%rd49, %rd48, 32;
	cvt.u32.u64	%r31, %rd49;
	cvt.u32.u64	%r32, %rd48;
	neg.ftz.f32 	%f83, %f173;
	neg.ftz.f32 	%f84, %f174;
	neg.ftz.f32 	%f85, %f175;
	// inline asm
	call (%r24, %r25), _optix_trace_2, (%rd27, %f62, %f63, %f64, %f83, %f84, %f85, %f86, %f87, %f305, %r26, %r30, %r30, %r29, %r30, %r31, %r32);
	// inline asm
	neg.ftz.f32 	%f208, %f196;
	sub.ftz.f32 	%f209, %f208, %f195;
	sub.ftz.f32 	%f210, %f209, %f198;
	sub.ftz.f32 	%f211, %f210, %f200;
	max.ftz.f32 	%f15, %f211, %f305;
	ld.const.v2.f32 	{%f212, %f213}, [optixLaunchParams+24];
	sub.ftz.f32 	%f216, %f62, %f212;
	sub.ftz.f32 	%f217, %f63, %f213;
	ld.const.f32 	%f218, [optixLaunchParams+32];
	sub.ftz.f32 	%f219, %f64, %f218;
	mul.ftz.f32 	%f220, %f217, %f217;
	fma.rn.ftz.f32 	%f221, %f216, %f216, %f220;
	fma.rn.ftz.f32 	%f222, %f219, %f219, %f221;
	rsqrt.approx.ftz.f32 	%f223, %f222;
	mul.ftz.f32 	%f224, %f216, %f223;
	mul.ftz.f32 	%f225, %f217, %f223;
	mul.ftz.f32 	%f226, %f219, %f223;
	neg.ftz.f32 	%f227, %f176;
	add.ftz.f32 	%f228, %f121, %f121;
	add.ftz.f32 	%f229, %f122, %f122;
	add.ftz.f32 	%f230, %f123, %f123;
	add.ftz.f32 	%f231, %f124, %f124;
	mul.ftz.f32 	%f232, %f121, %f83;
	mul.ftz.f32 	%f233, %f122, %f174;
	sub.ftz.f32 	%f234, %f232, %f233;
	mul.ftz.f32 	%f235, %f123, %f175;
	sub.ftz.f32 	%f236, %f234, %f235;
	mul.ftz.f32 	%f237, %f124, %f176;
	sub.ftz.f32 	%f238, %f236, %f237;
	mul.ftz.f32 	%f239, %f228, %f238;
	mul.ftz.f32 	%f240, %f229, %f238;
	mul.ftz.f32 	%f241, %f230, %f238;
	mul.ftz.f32 	%f242, %f231, %f238;
	sub.ftz.f32 	%f243, %f83, %f239;
	sub.ftz.f32 	%f244, %f84, %f240;
	sub.ftz.f32 	%f245, %f85, %f241;
	sub.ftz.f32 	%f246, %f227, %f242;
	mul.ftz.f32 	%f247, %f244, %f244;
	fma.rn.ftz.f32 	%f248, %f243, %f243, %f247;
	fma.rn.ftz.f32 	%f249, %f245, %f245, %f248;
	fma.rn.ftz.f32 	%f250, %f246, %f246, %f249;
	rsqrt.approx.ftz.f32 	%f251, %f250;
	mul.ftz.f32 	%f252, %f243, %f251;
	mul.ftz.f32 	%f253, %f244, %f251;
	mul.ftz.f32 	%f254, %f245, %f251;
	mul.ftz.f32 	%f255, %f225, %f253;
	fma.rn.ftz.f32 	%f256, %f224, %f252, %f255;
	fma.rn.ftz.f32 	%f16, %f226, %f254, %f256;
	setp.gt.ftz.f32	%p3, %f16, 0f00000000;
	@%p3 bra 	BB7_6;
	bra.uni 	BB7_5;

BB7_6:
	lg2.approx.ftz.f32 	%f260, %f16;
	ex2.approx.ftz.f32 	%f261, %f260;
	ld.local.f32 	%f304, [%rd12];
	mul.ftz.f32 	%f262, %f261, %f304;
	ld.local.f32 	%f303, [%rd12+4];
	mul.ftz.f32 	%f263, %f261, %f303;
	ld.local.f32 	%f302, [%rd12+8];
	mul.ftz.f32 	%f264, %f261, %f302;
	mul.ftz.f32 	%f305, %f262, 0f3E4CCCCD;
	mul.ftz.f32 	%f306, %f263, 0f3E4CCCCD;
	mul.ftz.f32 	%f307, %f264, 0f3E4CCCCD;
	bra.uni 	BB7_7;

BB7_5:
	ld.local.f32 	%f304, [%rd12];
	ld.local.f32 	%f303, [%rd12+4];
	ld.local.f32 	%f302, [%rd12+8];
	mov.f32 	%f306, %f305;
	mov.f32 	%f307, %f305;

BB7_7:
	ld.f32 	%f265, [%rd1];
	ld.f32 	%f266, [%rd1+4];
	ld.f32 	%f267, [%rd1+8];
	ld.local.f32 	%f268, [%rd9];
	mul.ftz.f32 	%f269, %f265, %f268;
	ld.local.f32 	%f270, [%rd9+4];
	mul.ftz.f32 	%f271, %f266, %f270;
	ld.local.f32 	%f272, [%rd9+8];
	mul.ftz.f32 	%f273, %f267, %f272;
	mul.ftz.f32 	%f274, %f15, %f269;
	mul.ftz.f32 	%f275, %f15, %f271;
	mul.ftz.f32 	%f276, %f15, %f273;
	mul.ftz.f32 	%f277, %f274, 0f3F19999A;
	mul.ftz.f32 	%f278, %f275, 0f3F19999A;
	mul.ftz.f32 	%f279, %f276, 0f3F19999A;
	fma.rn.ftz.f32 	%f280, %f265, 0f3E4CCCCD, %f277;
	fma.rn.ftz.f32 	%f281, %f266, 0f3E4CCCCD, %f278;
	fma.rn.ftz.f32 	%f282, %f267, 0f3E4CCCCD, %f279;
	add.ftz.f32 	%f283, %f305, %f280;
	add.ftz.f32 	%f284, %f306, %f281;
	add.ftz.f32 	%f285, %f307, %f282;
	mul.ftz.f32 	%f286, %f284, 0f3DCCCCCD;
	mul.ftz.f32 	%f287, %f285, 0f3DCCCCCD;
	ld.local.f32 	%f288, [%rd8];
	mul.ftz.f32 	%f289, %f288, 0f3F4CCCCD;
	ld.local.f32 	%f290, [%rd8+4];
	ld.local.f32 	%f291, [%rd8+8];
	fma.rn.ftz.f32 	%f292, %f283, 0f3DCCCCCD, %f289;
	fma.rn.ftz.f32 	%f293, %f290, 0f3F4CCCCD, %f286;
	fma.rn.ftz.f32 	%f294, %f291, 0f3F4CCCCD, %f287;
	fma.rn.ftz.f32 	%f295, %f304, 0f3DCCCCCD, %f292;
	fma.rn.ftz.f32 	%f296, %f303, 0f3DCCCCCD, %f293;
	fma.rn.ftz.f32 	%f297, %f302, 0f3DCCCCCD, %f294;
	st.f32 	[%rd1], %f295;
	st.f32 	[%rd1+4], %f296;
	st.f32 	[%rd1+8], %f297;
	ret;
}

	// .globl	__anyhit__phong_glass
.visible .entry __anyhit__phong_glass(

)
{



	ret;
}

	// .globl	__miss__phong_glass
.visible .entry __miss__phong_glass(

)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<7>;


	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd1, %r1;
	shl.b64 	%rd2, %rd1, 32;
	cvt.u64.u32	%rd3, %r2;
	or.b64  	%rd4, %rd2, %rd3;
	mov.u64 	%rd5, 1060320051;
	st.u32 	[%rd4+4], %rd5;
	mov.u64 	%rd6, 0;
	st.u32 	[%rd4], %rd6;
	mov.u32 	%r3, 1065353216;
	st.u32 	[%rd4+8], %r3;
	ret;
}

	// .globl	__anyhit__shadow_glass
.visible .entry __anyhit__shadow_glass(

)
{



	ret;
}

	// .globl	__closesthit__shadow_glass
.visible .entry __closesthit__shadow_glass(

)
{
	.local .align 4 .b8 	__local_depot11[12];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .f32 	%f<51>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<21>;


	mov.u64 	%SPL, __local_depot11;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd3, %SP, 0;
	add.u64 	%rd4, %SPL, 0;
	mov.u64 	%rd5, 1065353216;
	st.local.u32 	[%rd4+4], %rd5;
	st.local.u32 	[%rd4], %rd5;
	mov.u32 	%r13, 1065353216;
	st.local.u32 	[%rd4+8], %r13;
	shr.u64 	%rd6, %rd3, 32;
	cvt.u32.u64	%r11, %rd6;
	cvt.u32.u64	%r12, %rd3;
	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd7, %r1;
	shl.b64 	%rd8, %rd7, 32;
	cvt.u64.u32	%rd9, %r2;
	or.b64  	%rd10, %rd8, %rd9;
	// inline asm
	call (%rd1), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	// inline asm
	call (%r3), _optix_read_primitive_idx, ();
	// inline asm
	ld.u64 	%rd11, [%rd1];
	mul.wide.s32 	%rd12, %r3, 12;
	add.s64 	%rd13, %rd11, %rd12;
	ld.u32 	%r14, [%rd13];
	ld.u32 	%r15, [%rd13+4];
	ld.u32 	%r16, [%rd13+8];
	// inline asm
	call (%f1, %f2), _optix_get_triangle_barycentrics, ();
	// inline asm
	mov.f32 	%f15, 0f3F800000;
	sub.ftz.f32 	%f16, %f15, %f1;
	sub.ftz.f32 	%f17, %f16, %f2;
	ld.u64 	%rd14, [%rd1+8];
	mul.wide.u32 	%rd15, %r14, 16;
	add.s64 	%rd16, %rd14, %rd15;
	ld.v4.f32 	{%f18, %f19, %f20, %f21}, [%rd16];
	mov.u32 	%r10, 1;
	mov.u32 	%r9, 2;
	mul.wide.u32 	%rd17, %r15, 16;
	add.s64 	%rd18, %rd14, %rd17;
	ld.v4.f32 	{%f25, %f26, %f27, %f28}, [%rd18];
	mul.ftz.f32 	%f32, %f1, %f25;
	mul.ftz.f32 	%f33, %f1, %f26;
	mul.ftz.f32 	%f34, %f1, %f27;
	fma.rn.ftz.f32 	%f35, %f18, %f17, %f32;
	fma.rn.ftz.f32 	%f36, %f19, %f17, %f33;
	fma.rn.ftz.f32 	%f37, %f20, %f17, %f34;
	mul.wide.u32 	%rd19, %r16, 16;
	add.s64 	%rd20, %rd14, %rd19;
	ld.v4.f32 	{%f38, %f39, %f40, %f41}, [%rd20];
	fma.rn.ftz.f32 	%f6, %f2, %f38, %f35;
	fma.rn.ftz.f32 	%f7, %f2, %f39, %f36;
	fma.rn.ftz.f32 	%f8, %f2, %f40, %f37;
	ld.const.u64 	%rd2, [optixLaunchParams+72];
	// inline asm
	call (%f3), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f4), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f5), _optix_get_world_ray_direction_z, ();
	// inline asm
	mov.u32 	%r6, 255;
	mov.f32 	%f12, 0f3A83126F;
	mov.f32 	%f13, 0f60AD78EC;
	mov.f32 	%f14, 0f00000000;
	// inline asm
	call (%r4, %r5), _optix_trace_2, (%rd2, %f6, %f7, %f8, %f3, %f4, %f5, %f12, %f13, %f14, %r6, %r10, %r10, %r9, %r10, %r11, %r12);
	// inline asm
	ld.local.f32 	%f45, [%rd4];
	mul.ftz.f32 	%f46, %f45, 0f3F666666;
	ld.local.f32 	%f47, [%rd4+4];
	mul.ftz.f32 	%f48, %f47, 0f3F666666;
	ld.local.f32 	%f49, [%rd4+8];
	mul.ftz.f32 	%f50, %f49, 0f3F666666;
	st.f32 	[%rd10], %f46;
	st.f32 	[%rd10+4], %f48;
	st.f32 	[%rd10+8], %f50;
	ret;
}

	// .globl	__miss__shadow_glass
.visible .entry __miss__shadow_glass(

)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<6>;


	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd1, %r1;
	shl.b64 	%rd2, %rd1, 32;
	cvt.u64.u32	%rd3, %r2;
	or.b64  	%rd4, %rd2, %rd3;
	mov.u64 	%rd5, 1065353216;
	st.u32 	[%rd4+4], %rd5;
	st.u32 	[%rd4], %rd5;
	mov.u32 	%r3, 1065353216;
	st.u32 	[%rd4+8], %r3;
	ret;
}

	// .globl	__closesthit__light
.visible .entry __closesthit__light(

)
{



	ret;
}

	// .globl	__anyhit__light
.visible .entry __anyhit__light(

)
{



	ret;
}

	// .globl	__miss__light
.visible .entry __miss__light(

)
{



	ret;
}

	// .globl	__closesthit__light_shadow
.visible .entry __closesthit__light_shadow(

)
{



	ret;
}

	// .globl	__anyhit__light_shadow
.visible .entry __anyhit__light_shadow(

)
{



	ret;
}

	// .globl	__miss__light_shadow
.visible .entry __miss__light_shadow(

)
{



	ret;
}

	// .globl	__closesthit__phong_metal
.visible .entry __closesthit__phong_metal(

)
{



	ret;
}


