//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-25769353
// Cuda compilation tools, release 10.1, V10.1.105
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_30
.address_size 64

	// .globl	__closesthit__radiance
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.const .align 8 .b8 optixLaunchParams[88];
.global .align 1 .b8 $str[45] = {61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 10, 0};
.global .align 1 .b8 $str1[23] = {78, 97, 117, 32, 82, 97, 121, 45, 84, 114, 97, 99, 105, 110, 103, 32, 68, 101, 98, 117, 103, 10, 0};
.global .align 1 .b8 $str2[24] = {76, 105, 103, 104, 116, 80, 111, 115, 58, 32, 37, 102, 44, 32, 37, 102, 32, 37, 102, 32, 37, 102, 10, 0};
.global .align 1 .b8 $str3[19] = {76, 97, 117, 110, 99, 104, 32, 100, 105, 109, 58, 32, 37, 117, 32, 37, 117, 10, 0};
.global .align 1 .b8 $str4[29] = {82, 97, 121, 115, 32, 112, 101, 114, 32, 112, 105, 120, 101, 108, 32, 115, 113, 117, 97, 114, 101, 100, 58, 32, 37, 100, 32, 10, 0};

.visible .entry __closesthit__radiance(

)
{
	.local .align 4 .b8 	__local_depot0[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<3>;
	.reg .f32 	%f<140>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<40>;


	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd8, %SP, 0;
	add.u64 	%rd9, %SPL, 0;
	mov.u32 	%r4, 1065353216;
	st.local.u32 	[%rd9], %r4;
	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd10, %r1;
	shl.b64 	%rd11, %rd10, 32;
	cvt.u64.u32	%rd12, %r2;
	or.b64  	%rd1, %rd11, %rd12;
	// inline asm
	call (%rd7), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	// inline asm
	call (%r3), _optix_read_primitive_idx, ();
	// inline asm
	ld.u64 	%rd13, [%rd7];
	mul.wide.s32 	%rd14, %r3, 12;
	add.s64 	%rd15, %rd13, %rd14;
	ld.u32 	%rd3, [%rd15];
	ld.u32 	%rd4, [%rd15+4];
	ld.u32 	%rd5, [%rd15+8];
	// inline asm
	call (%f6, %f7), _optix_get_triangle_barycentrics, ();
	// inline asm
	ld.u32 	%r5, [%rd7+48];
	setp.eq.s32	%p1, %r5, 0;
	@%p1 bra 	BB0_3;

	ld.u64 	%rd6, [%rd7+24];
	setp.eq.s64	%p2, %rd6, 0;
	@%p2 bra 	BB0_3;

	mov.f32 	%f8, 0f3F800000;
	sub.ftz.f32 	%f9, %f8, %f6;
	sub.ftz.f32 	%f139, %f9, %f7;
	shl.b64 	%rd16, %rd3, 4;
	add.s64 	%rd17, %rd6, %rd16;
	ld.v2.f32 	{%f10, %f11}, [%rd17];
	shl.b64 	%rd18, %rd4, 4;
	add.s64 	%rd19, %rd6, %rd18;
	ld.v2.f32 	{%f14, %f15}, [%rd19];
	mul.ftz.f32 	%f18, %f6, %f14;
	mul.ftz.f32 	%f19, %f6, %f15;
	fma.rn.ftz.f32 	%f20, %f139, %f10, %f18;
	fma.rn.ftz.f32 	%f21, %f139, %f11, %f19;
	shl.b64 	%rd20, %rd5, 4;
	add.s64 	%rd21, %rd6, %rd20;
	ld.v2.f32 	{%f22, %f23}, [%rd21];
	fma.rn.ftz.f32 	%f26, %f7, %f22, %f20;
	fma.rn.ftz.f32 	%f27, %f7, %f23, %f21;
	ld.u64 	%rd22, [%rd7+56];
	tex.2d.v4.f32.f32	{%f28, %f29, %f30, %f31}, [%rd22, {%f26, %f27}];
	st.f32 	[%rd1], %f28;
	st.f32 	[%rd1+4], %f29;
	st.f32 	[%rd1+8], %f30;
	bra.uni 	BB0_4;

BB0_3:
	ld.v2.f32 	{%f32, %f33}, [%rd7+64];
	ld.f32 	%f36, [%rd7+72];
	st.f32 	[%rd1], %f32;
	st.f32 	[%rd1+4], %f33;
	st.f32 	[%rd1+8], %f36;
	mov.f32 	%f37, 0f3F800000;
	sub.ftz.f32 	%f38, %f37, %f6;
	sub.ftz.f32 	%f139, %f38, %f7;

BB0_4:
	cvt.u32.u64	%r15, %rd3;
	cvt.u32.u64	%r16, %rd4;
	cvt.u32.u64	%r17, %rd5;
	ld.u64 	%rd24, [%rd7+16];
	mul.wide.u32 	%rd25, %r15, 16;
	add.s64 	%rd26, %rd24, %rd25;
	ld.v4.f32 	{%f48, %f49, %f50, %f51}, [%rd26];
	mov.u32 	%r12, 1;
	mov.u32 	%r11, 2;
	mul.wide.u32 	%rd27, %r16, 16;
	add.s64 	%rd28, %rd24, %rd27;
	ld.v4.f32 	{%f55, %f56, %f57, %f58}, [%rd28];
	mul.ftz.f32 	%f62, %f6, %f55;
	mul.ftz.f32 	%f63, %f6, %f56;
	mul.ftz.f32 	%f64, %f6, %f57;
	fma.rn.ftz.f32 	%f65, %f139, %f48, %f62;
	fma.rn.ftz.f32 	%f66, %f139, %f49, %f63;
	fma.rn.ftz.f32 	%f67, %f139, %f50, %f64;
	mul.wide.u32 	%rd29, %r17, 16;
	add.s64 	%rd30, %rd24, %rd29;
	ld.v4.f32 	{%f68, %f69, %f70, %f71}, [%rd30];
	fma.rn.ftz.f32 	%f75, %f7, %f68, %f65;
	fma.rn.ftz.f32 	%f76, %f7, %f69, %f66;
	fma.rn.ftz.f32 	%f77, %f7, %f70, %f67;
	ld.u64 	%rd31, [%rd7+8];
	add.s64 	%rd32, %rd31, %rd25;
	ld.v4.f32 	{%f78, %f79, %f80, %f81}, [%rd32];
	add.s64 	%rd33, %rd31, %rd27;
	ld.v4.f32 	{%f85, %f86, %f87, %f88}, [%rd33];
	mul.ftz.f32 	%f92, %f6, %f85;
	mul.ftz.f32 	%f93, %f6, %f86;
	mul.ftz.f32 	%f94, %f6, %f87;
	fma.rn.ftz.f32 	%f95, %f139, %f78, %f92;
	fma.rn.ftz.f32 	%f96, %f139, %f79, %f93;
	fma.rn.ftz.f32 	%f97, %f139, %f80, %f94;
	add.s64 	%rd34, %rd31, %rd29;
	ld.v4.f32 	{%f98, %f99, %f100, %f101}, [%rd34];
	fma.rn.ftz.f32 	%f39, %f7, %f98, %f95;
	fma.rn.ftz.f32 	%f40, %f7, %f99, %f96;
	fma.rn.ftz.f32 	%f41, %f7, %f100, %f97;
	ld.const.u64 	%rd35, [optixLaunchParams+80];
	cvta.to.global.u64 	%rd36, %rd35;
	ld.global.v4.f32 	{%f105, %f106, %f107, %f108}, [%rd36];
	sub.ftz.f32 	%f112, %f105, %f39;
	sub.ftz.f32 	%f113, %f106, %f40;
	sub.ftz.f32 	%f114, %f107, %f41;
	mul.ftz.f32 	%f115, %f113, %f113;
	fma.rn.ftz.f32 	%f116, %f112, %f112, %f115;
	fma.rn.ftz.f32 	%f117, %f114, %f114, %f116;
	sqrt.approx.ftz.f32 	%f46, %f117;
	rsqrt.approx.ftz.f32 	%f118, %f117;
	mul.ftz.f32 	%f42, %f112, %f118;
	mul.ftz.f32 	%f43, %f113, %f118;
	mul.ftz.f32 	%f44, %f114, %f118;
	mul.ftz.f32 	%f119, %f76, %f76;
	fma.rn.ftz.f32 	%f120, %f75, %f75, %f119;
	fma.rn.ftz.f32 	%f121, %f77, %f77, %f120;
	rsqrt.approx.ftz.f32 	%f122, %f121;
	mul.ftz.f32 	%f123, %f75, %f122;
	mul.ftz.f32 	%f124, %f76, %f122;
	mul.ftz.f32 	%f125, %f77, %f122;
	mul.ftz.f32 	%f126, %f43, %f124;
	fma.rn.ftz.f32 	%f127, %f42, %f123, %f126;
	fma.rn.ftz.f32 	%f128, %f44, %f125, %f127;
	mov.f32 	%f47, 0f00000000;
	max.ftz.f32 	%f129, %f128, %f47;
	ld.const.u64 	%rd23, [optixLaunchParams+72];
	cvt.u32.u64	%r14, %rd8;
	shr.u64 	%rd38, %rd8, 32;
	cvt.u32.u64	%r13, %rd38;
	mov.u32 	%r8, 255;
	mov.f32 	%f45, 0f3A83126F;
	// inline asm
	call (%r6, %r7), _optix_trace_2, (%rd23, %f39, %f40, %f41, %f42, %f43, %f44, %f45, %f46, %f47, %r8, %r12, %r12, %r11, %r12, %r13, %r14);
	// inline asm
	ld.local.f32 	%f130, [%rd9];
	mul.ftz.f32 	%f131, %f129, %f130;
	cvt.ftz.f64.f32	%fd1, %f131;
	add.f64 	%fd2, %fd1, 0d3FC999999999999A;
	mov.f64 	%fd3, 0d3FF0000000000000;
	min.f64 	%fd4, %fd2, %fd3;
	cvt.rn.ftz.f32.f64	%f132, %fd4;
	ld.f32 	%f133, [%rd1];
	mul.ftz.f32 	%f134, %f133, %f132;
	ld.f32 	%f135, [%rd1+4];
	mul.ftz.f32 	%f136, %f132, %f135;
	ld.f32 	%f137, [%rd1+8];
	mul.ftz.f32 	%f138, %f132, %f137;
	st.f32 	[%rd1], %f134;
	st.f32 	[%rd1+4], %f136;
	st.f32 	[%rd1+8], %f138;
	ret;
}

	// .globl	__anyhit__radiance
.visible .entry __anyhit__radiance(

)
{



	ret;
}

	// .globl	__miss__radiance
.visible .entry __miss__radiance(

)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<7>;


	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd1, %r1;
	shl.b64 	%rd2, %rd1, 32;
	cvt.u64.u32	%rd3, %r2;
	or.b64  	%rd4, %rd2, %rd3;
	mov.u64 	%rd5, 1060320051;
	st.u32 	[%rd4+4], %rd5;
	mov.u64 	%rd6, 0;
	st.u32 	[%rd4], %rd6;
	mov.u32 	%r3, 1065353216;
	st.u32 	[%rd4+8], %r3;
	ret;
}

	// .globl	__anyhit__shadow
.visible .entry __anyhit__shadow(

)
{



	ret;
}

	// .globl	__closesthit__shadow
.visible .entry __closesthit__shadow(

)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<5>;


	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd1, %r1;
	shl.b64 	%rd2, %rd1, 32;
	cvt.u64.u32	%rd3, %r2;
	or.b64  	%rd4, %rd2, %rd3;
	mov.u32 	%r3, 0;
	st.u32 	[%rd4], %r3;
	ret;
}

	// .globl	__miss__shadow
.visible .entry __miss__shadow(

)
{



	ret;
}

	// .globl	__raygen__renderFrame
.visible .entry __raygen__renderFrame(

)
{
	.local .align 16 .b8 	__local_depot6[48];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<5>;
	.reg .f32 	%f<174>;
	.reg .b32 	%r<117>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<31>;


	mov.u64 	%SPL, __local_depot6;
	cvta.local.u64 	%SP, %SPL;
	// inline asm
	call (%r10), _optix_get_launch_index_x, ();
	// inline asm
	// inline asm
	call (%r11), _optix_get_launch_index_y, ();
	// inline asm
	ld.const.u32 	%r13, [optixLaunchParams];
	or.b32  	%r14, %r13, %r10;
	or.b32  	%r15, %r14, %r11;
	setp.eq.s32	%p1, %r15, 0;
	@%p1 bra 	BB6_2;

	ld.const.u64 	%rd30, [optixLaunchParams+80];
	ld.const.u32 	%r114, [optixLaunchParams+16];
	bra.uni 	BB6_3;

BB6_2:
	mov.u64 	%rd8, $str;
	cvta.global.u64 	%rd9, %rd8;
	mov.u64 	%rd10, 0;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd9;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd10;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r19, [retval0+0];
	
	//{
	}// Callseq End 0
	mov.u64 	%rd11, $str1;
	cvta.global.u64 	%rd12, %rd11;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd10;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r20, [retval0+0];
	
	//{
	}// Callseq End 1
	ld.const.u64 	%rd30, [optixLaunchParams+80];
	cvta.to.global.u64 	%rd13, %rd30;
	ld.global.v4.f32 	{%f41, %f42, %f43, %f44}, [%rd13];
	cvt.ftz.f64.f32	%fd1, %f42;
	cvt.ftz.f64.f32	%fd2, %f41;
	add.u64 	%rd14, %SP, 16;
	add.u64 	%rd15, %SPL, 16;
	st.local.v2.f64 	[%rd15], {%fd2, %fd1};
	cvt.ftz.f64.f32	%fd3, %f44;
	cvt.ftz.f64.f32	%fd4, %f43;
	st.local.v2.f64 	[%rd15+16], {%fd4, %fd3};
	mov.u64 	%rd16, $str2;
	cvta.global.u64 	%rd17, %rd16;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd17;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd14;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r21, [retval0+0];
	
	//{
	}// Callseq End 2
	// inline asm
	call (%r17), _optix_get_launch_dimension_y, ();
	// inline asm
	// inline asm
	call (%r16), _optix_get_launch_dimension_x, ();
	// inline asm
	st.local.v2.u32 	[%rd15], {%r16, %r17};
	mov.u64 	%rd18, $str3;
	cvta.global.u64 	%rd19, %rd18;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd19;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd14;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r22, [retval0+0];
	
	//{
	}// Callseq End 3
	ld.const.u32 	%r114, [optixLaunchParams+16];
	st.local.u32 	[%rd15], %r114;
	mov.u64 	%rd20, $str4;
	cvta.global.u64 	%rd21, %rd20;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd21;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd14;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r23, [retval0+0];
	
	//{
	}// Callseq End 4
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd9;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd10;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r24, [retval0+0];
	
	//{
	}// Callseq End 5

BB6_3:
	cvta.to.global.u64 	%rd22, %rd30;
	add.s64 	%rd4, %rd22, 24;
	ld.const.v2.f32 	{%f52, %f53}, [optixLaunchParams+64];
	ld.const.v2.f32 	{%f54, %f55}, [optixLaunchParams+56];
	mul.ftz.f32 	%f56, %f52, %f54;
	ld.const.v2.f32 	{%f57, %f58}, [optixLaunchParams+48];
	mul.ftz.f32 	%f59, %f53, %f58;
	sub.ftz.f32 	%f60, %f56, %f59;
	mul.ftz.f32 	%f61, %f53, %f57;
	mul.ftz.f32 	%f62, %f55, %f54;
	sub.ftz.f32 	%f63, %f61, %f62;
	mul.ftz.f32 	%f64, %f55, %f58;
	mul.ftz.f32 	%f65, %f52, %f57;
	sub.ftz.f32 	%f66, %f64, %f65;
	mul.ftz.f32 	%f67, %f63, %f63;
	fma.rn.ftz.f32 	%f68, %f60, %f60, %f67;
	fma.rn.ftz.f32 	%f69, %f66, %f66, %f68;
	rsqrt.approx.ftz.f32 	%f70, %f69;
	mul.ftz.f32 	%f7, %f60, %f70;
	mul.ftz.f32 	%f8, %f63, %f70;
	mul.ftz.f32 	%f9, %f66, %f70;
	ld.global.f32 	%f71, [%rd22+24];
	ld.const.v2.f32 	{%f72, %f73}, [optixLaunchParams+24];
	fma.rn.ftz.f32 	%f12, %f71, %f7, %f72;
	fma.rn.ftz.f32 	%f13, %f71, %f8, %f73;
	ld.const.f32 	%f14, [optixLaunchParams+32];
	fma.rn.ftz.f32 	%f15, %f71, %f9, %f14;
	add.u64 	%rd23, %SP, 0;
	add.u64 	%rd5, %SPL, 0;
	mov.u32 	%r25, 1065353216;
	st.local.u32 	[%rd5], %r25;
	st.local.u32 	[%rd5+4], %r25;
	st.local.u32 	[%rd5+8], %r25;
	cvt.rn.f32.s32	%f16, %r114;
	rcp.approx.ftz.f32 	%f17, %f16;
	mov.f32 	%f168, 0f00000000;
	setp.leu.ftz.f32	%p2, %f16, 0f00000000;
	mov.f32 	%f169, %f168;
	mov.f32 	%f170, %f168;
	@%p2 bra 	BB6_8;

	ld.global.v2.f32 	{%f78, %f79}, [%rd4+-8];
	mul.ftz.f32 	%f18, %f78, 0f42C80000;
	cvt.rn.f32.s32	%f19, %r10;
	cvt.rn.f32.s32	%f20, %r11;
	ld.const.u64 	%rd7, [optixLaunchParams+72];
	mul.ftz.f32 	%f21, %f16, %f16;
	mul.ftz.f32 	%f22, %f79, 0f42C80000;
	mov.f32 	%f77, 0f00000000;
	mov.u32 	%r26, 0;
	// inline asm
	call (%r28), _optix_get_launch_dimension_x, ();
	// inline asm
	// inline asm
	call (%r29), _optix_get_launch_dimension_y, ();
	// inline asm
	mov.f32 	%f163, %f77;
	mov.u32 	%r115, %r26;
	mov.f32 	%f168, %f77;
	mov.f32 	%f169, %f77;
	mov.f32 	%f170, %f77;

BB6_5:
	mul.ftz.f32 	%f27, %f16, %f163;
	fma.rn.ftz.f32 	%f28, %f17, %f163, %f19;
	mov.f32 	%f167, %f77;
	mov.u32 	%r116, %r26;

BB6_6:
	mad.lo.s32 	%r40, %r28, %r10, %r11;
	add.ftz.f32 	%f92, %f27, %f167;
	cvt.rzi.ftz.u32.f32	%r41, %f92;
	shl.b32 	%r42, %r41, 4;
	add.s32 	%r43, %r42, -1556008596;
	add.s32 	%r44, %r41, -1640531527;
	shr.u32 	%r45, %r41, 5;
	add.s32 	%r46, %r45, -939442524;
	xor.b32  	%r47, %r43, %r44;
	xor.b32  	%r48, %r47, %r46;
	add.s32 	%r49, %r40, %r48;
	shl.b32 	%r50, %r49, 4;
	add.s32 	%r51, %r50, -1383041155;
	add.s32 	%r52, %r49, -1640531527;
	xor.b32  	%r53, %r51, %r52;
	shr.u32 	%r54, %r49, 5;
	add.s32 	%r55, %r54, 2123724318;
	xor.b32  	%r56, %r53, %r55;
	add.s32 	%r57, %r56, %r41;
	shl.b32 	%r58, %r57, 4;
	add.s32 	%r59, %r58, -1556008596;
	add.s32 	%r60, %r57, 1013904242;
	shr.u32 	%r61, %r57, 5;
	add.s32 	%r62, %r61, -939442524;
	xor.b32  	%r63, %r59, %r60;
	xor.b32  	%r64, %r63, %r62;
	add.s32 	%r65, %r64, %r49;
	shl.b32 	%r66, %r65, 4;
	add.s32 	%r67, %r66, -1383041155;
	add.s32 	%r68, %r65, 1013904242;
	xor.b32  	%r69, %r67, %r68;
	shr.u32 	%r70, %r65, 5;
	add.s32 	%r71, %r70, 2123724318;
	xor.b32  	%r72, %r69, %r71;
	add.s32 	%r73, %r72, %r57;
	shl.b32 	%r74, %r73, 4;
	add.s32 	%r75, %r74, -1556008596;
	add.s32 	%r76, %r73, -626627285;
	shr.u32 	%r77, %r73, 5;
	add.s32 	%r78, %r77, -939442524;
	xor.b32  	%r79, %r75, %r76;
	xor.b32  	%r80, %r79, %r78;
	add.s32 	%r81, %r80, %r65;
	shl.b32 	%r82, %r81, 4;
	add.s32 	%r83, %r82, -1383041155;
	add.s32 	%r84, %r81, -626627285;
	xor.b32  	%r85, %r83, %r84;
	shr.u32 	%r86, %r81, 5;
	add.s32 	%r87, %r86, 2123724318;
	xor.b32  	%r88, %r85, %r87;
	add.s32 	%r89, %r88, %r73;
	shl.b32 	%r90, %r89, 4;
	add.s32 	%r91, %r90, -1556008596;
	add.s32 	%r92, %r89, 2027808484;
	shr.u32 	%r93, %r89, 5;
	add.s32 	%r94, %r93, -939442524;
	xor.b32  	%r95, %r91, %r92;
	xor.b32  	%r96, %r95, %r94;
	add.s32 	%r97, %r96, %r81;
	st.local.u32 	[%rd5+12], %r97;
	fma.rn.ftz.f32 	%f93, %f17, %f167, %f20;
	cvt.rn.f32.u32	%f94, %r28;
	cvt.rn.f32.u32	%f95, %r29;
	div.approx.ftz.f32 	%f96, %f28, %f94;
	div.approx.ftz.f32 	%f97, %f93, %f95;
	fma.rn.ftz.f32 	%f98, %f96, 0f40000000, 0fBF800000;
	fma.rn.ftz.f32 	%f99, %f97, 0f40000000, 0fBF800000;
	mul.ftz.f32 	%f100, %f57, %f98;
	mul.ftz.f32 	%f101, %f58, %f98;
	mul.ftz.f32 	%f102, %f54, %f98;
	sub.ftz.f32 	%f103, %f72, %f100;
	sub.ftz.f32 	%f104, %f73, %f101;
	sub.ftz.f32 	%f105, %f14, %f102;
	mul.ftz.f32 	%f106, %f55, %f99;
	mul.ftz.f32 	%f107, %f52, %f99;
	mul.ftz.f32 	%f108, %f53, %f99;
	sub.ftz.f32 	%f109, %f103, %f106;
	sub.ftz.f32 	%f110, %f104, %f107;
	sub.ftz.f32 	%f111, %f105, %f108;
	sub.ftz.f32 	%f112, %f12, %f109;
	sub.ftz.f32 	%f113, %f13, %f110;
	sub.ftz.f32 	%f114, %f15, %f111;
	mul.ftz.f32 	%f115, %f113, %f113;
	fma.rn.ftz.f32 	%f116, %f112, %f112, %f115;
	fma.rn.ftz.f32 	%f117, %f114, %f114, %f116;
	rsqrt.approx.ftz.f32 	%f118, %f117;
	mul.ftz.f32 	%f119, %f112, %f118;
	mul.ftz.f32 	%f120, %f113, %f118;
	mul.ftz.f32 	%f121, %f118, %f114;
	mul.ftz.f32 	%f122, %f8, %f120;
	fma.rn.ftz.f32 	%f123, %f7, %f119, %f122;
	fma.rn.ftz.f32 	%f124, %f9, %f121, %f123;
	mul.ftz.f32 	%f125, %f7, %f124;
	mul.ftz.f32 	%f126, %f8, %f124;
	mul.ftz.f32 	%f127, %f9, %f124;
	mul.ftz.f32 	%f128, %f18, %f119;
	mul.ftz.f32 	%f129, %f18, %f120;
	mul.ftz.f32 	%f130, %f18, %f121;
	mul.ftz.f32 	%f131, %f126, %f126;
	fma.rn.ftz.f32 	%f132, %f125, %f125, %f131;
	fma.rn.ftz.f32 	%f133, %f127, %f127, %f132;
	rsqrt.approx.ftz.f32 	%f134, %f133;
	fma.rn.ftz.f32 	%f135, %f128, %f134, %f12;
	fma.rn.ftz.f32 	%f136, %f129, %f134, %f13;
	fma.rn.ftz.f32 	%f137, %f134, %f130, %f15;
	mad.lo.s32 	%r98, %r97, 1664525, 1013904223;
	and.b32  	%r99, %r98, 16777215;
	cvt.rn.f32.u32	%f138, %r99;
	mov.f32 	%f139, 0f4B800000;
	div.approx.ftz.f32 	%f140, %f138, %f139;
	sqrt.approx.ftz.f32 	%f141, %f140;
	mul.ftz.f32 	%f142, %f22, %f141;
	mad.lo.s32 	%r100, %r98, 1664525, 7271263;
	and.b32  	%r101, %r100, 16777215;
	cvt.rn.f32.u32	%f143, %r101;
	div.approx.ftz.f32 	%f144, %f143, %f139;
	add.ftz.f32 	%f145, %f144, %f144;
	mul.ftz.f32 	%f146, %f145, 0f40490FDB;
	cos.approx.ftz.f32 	%f147, %f146;
	mul.ftz.f32 	%f148, %f142, %f147;
	sin.approx.ftz.f32 	%f149, %f146;
	mul.ftz.f32 	%f150, %f142, %f149;
	fma.rn.ftz.f32 	%f151, %f148, %f57, %f12;
	fma.rn.ftz.f32 	%f152, %f148, %f58, %f13;
	fma.rn.ftz.f32 	%f153, %f148, %f54, %f15;
	fma.rn.ftz.f32 	%f83, %f150, %f55, %f151;
	fma.rn.ftz.f32 	%f84, %f150, %f52, %f152;
	fma.rn.ftz.f32 	%f85, %f150, %f53, %f153;
	sub.ftz.f32 	%f86, %f135, %f83;
	sub.ftz.f32 	%f87, %f136, %f84;
	sub.ftz.f32 	%f88, %f137, %f85;
	shr.u64 	%rd25, %rd23, 32;
	cvt.u32.u64	%r38, %rd25;
	cvt.u32.u64	%r39, %rd23;
	mov.u32 	%r33, 255;
	mov.u32 	%r36, 2;
	mov.f32 	%f90, 0f60AD78EC;
	// inline asm
	call (%r31, %r32), _optix_trace_2, (%rd7, %f83, %f84, %f85, %f86, %f87, %f88, %f77, %f90, %f77, %r33, %r26, %r26, %r36, %r26, %r38, %r39);
	// inline asm
	ld.local.f32 	%f154, [%rd5];
	div.approx.ftz.f32 	%f155, %f154, %f21;
	add.ftz.f32 	%f170, %f170, %f155;
	ld.local.f32 	%f156, [%rd5+4];
	div.approx.ftz.f32 	%f157, %f156, %f21;
	add.ftz.f32 	%f168, %f168, %f157;
	ld.local.f32 	%f158, [%rd5+8];
	div.approx.ftz.f32 	%f159, %f158, %f21;
	add.ftz.f32 	%f169, %f169, %f159;
	add.s32 	%r116, %r116, 1;
	cvt.rn.f32.s32	%f167, %r116;
	setp.lt.ftz.f32	%p3, %f167, %f16;
	@%p3 bra 	BB6_6;

	add.s32 	%r115, %r115, 1;
	cvt.rn.f32.s32	%f163, %r115;
	setp.lt.ftz.f32	%p4, %f163, %f16;
	@%p4 bra 	BB6_5;

BB6_8:
	mul.ftz.f32 	%f160, %f170, 0f437F0000;
	cvt.rzi.ftz.s32.f32	%r105, %f160;
	mul.ftz.f32 	%f161, %f168, 0f437F0000;
	cvt.rzi.ftz.s32.f32	%r106, %f161;
	mul.ftz.f32 	%f162, %f169, 0f437F0000;
	cvt.rzi.ftz.s32.f32	%r107, %f162;
	shl.b32 	%r108, %r106, 8;
	shl.b32 	%r109, %r107, 16;
	or.b32  	%r110, %r105, %r108;
	or.b32  	%r111, %r110, %r109;
	or.b32  	%r112, %r111, -16777216;
	// inline asm
	call (%r102), _optix_get_launch_dimension_x, ();
	// inline asm
	mad.lo.s32 	%r113, %r102, %r11, %r10;
	ld.const.u64 	%rd26, [optixLaunchParams+8];
	cvta.to.global.u64 	%rd27, %rd26;
	mul.wide.u32 	%rd28, %r113, 4;
	add.s64 	%rd29, %rd27, %rd28;
	st.global.u32 	[%rd29], %r112;
	ret;
}


